/**
 * Copyright (c) 2010-2022 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ai.coqui.libstt;

/**
 *
 * @author Dan Cunningham
 *
 */
public class Metadata {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;

    protected Metadata(long cPtr, boolean cMemoryOwn) {
        swigCMemOwn = cMemoryOwn;
        swigCPtr = cPtr;
    }

    protected static long getCPtr(Metadata obj) {
        return (obj == null) ? 0 : obj.swigCPtr;
    }

    protected static long swigRelease(Metadata obj) {
        long ptr = 0;
        if (obj != null) {
            if (!obj.swigCMemOwn) {
                throw new RuntimeException("Cannot release ownership as memory is not owned");
            }
            ptr = obj.swigCPtr;
            obj.swigCMemOwn = false;
            obj.delete();
        }
        return ptr;
    }

    @Override
    @SuppressWarnings("deprecation")
    protected void finalize() {
        delete();
    }

    public synchronized void delete() {
        if (swigCPtr != 0) {
            if (swigCMemOwn) {
                swigCMemOwn = false;
                implJNI.delete_Metadata(swigCPtr);
            }
            swigCPtr = 0;
        }
    }

    public long getNumTranscripts() {
        return implJNI.Metadata_NumTranscripts_get(swigCPtr, this);
    }

    public CandidateTranscript getTranscript(int i) {
        return new CandidateTranscript(implJNI.Metadata_getTranscript(swigCPtr, this, i), false);
    }
}
