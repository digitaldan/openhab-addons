/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import static java.util.Map.entry;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.MatterClient;
import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * BarrierControl
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class BarrierControlCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "BARRIER_CONTROL_CLUSTER";
    public static final int CLUSTER_ID = 0x0103;

    static {
        ATTRIBUTE_MAPPING = Map.ofEntries(entry(28, "barrierMovingState"), entry(109, "barrierSafetyStatus"),
                entry(184, "barrierCapabilities"), entry(249, "barrierOpenEvents"), entry(305, "barrierCloseEvents"),
                entry(350, "barrierCommandOpenEvents"), entry(388, "barrierCommandCloseEvents"),
                entry(420, "barrierOpenPeriod"), entry(450, "barrierClosePeriod"), entry(478, "barrierPosition"),
                entry(13, "generatedCommandList"), entry(11, "acceptedCommandList"), entry(9, "eventList"),
                entry(7, "attributeList"), entry(5, "featureMap"), entry(2, "clusterRevision"));
        COMMAND_MAPPING = Map.ofEntries(entry(11, "barrierControlGoToPercent"), entry(67, "barrierControlStop"));
    }

    // ZCL Bitmaps
    public static class BarrierControlCapabilities implements JsonSerializable {
        public boolean partialBarrier;

        public BarrierControlCapabilities(boolean partialBarrier) {
            this.partialBarrier = partialBarrier;
        }

        public String toJson() {
            String out = "{";
            out += "\"partialBarrier\" : " + partialBarrier + "";
            out += "}";
            return out;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static BarrierControlCapabilities fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new BarrierControlCapabilities(keys[0]);
        }
    }

    public static class BarrierControlSafetyStatus implements JsonSerializable {
        public boolean remoteLockout;
        public boolean temperDetected;
        public boolean failedCommunication;
        public boolean positionFailure;

        public BarrierControlSafetyStatus(boolean remoteLockout, boolean temperDetected, boolean failedCommunication,
                boolean positionFailure) {
            this.remoteLockout = remoteLockout;
            this.temperDetected = temperDetected;
            this.failedCommunication = failedCommunication;
            this.positionFailure = positionFailure;
        }

        public String toJson() {
            String out = "{";
            out += "\"remoteLockout\" : " + remoteLockout + ",";
            out += "\"temperDetected\" : " + temperDetected + ",";
            out += "\"failedCommunication\" : " + failedCommunication + ",";
            out += "\"positionFailure\" : " + positionFailure + "";
            out += "}";
            return out;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static BarrierControlSafetyStatus fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new BarrierControlSafetyStatus(keys[0], keys[1], keys[2], keys[3]);
        }
    }

    public Integer barrierMovingState; // 28 enum8
    public Map<String, Boolean> barrierSafetyStatus; // 109 bitmap16
    public Map<String, Boolean> barrierCapabilities; // 184 bitmap8
    public Integer barrierOpenEvents; // 249 int16u
    public Integer barrierCloseEvents; // 305 int16u
    public Integer barrierCommandOpenEvents; // 350 int16u
    public Integer barrierCommandCloseEvents; // 388 int16u
    public Integer barrierOpenPeriod; // 420 int16u
    public Integer barrierClosePeriod; // 450 int16u
    public Integer barrierPosition; // 478 int8u
    public List<Integer> generatedCommandList; // 13 command_id
    public List<Integer> acceptedCommandList; // 11 command_id
    public List<Integer> eventList; // 9 event_id
    public List<Integer> attributeList; // 7 attrib_id
    public Map<String, Boolean> featureMap; // 5 bitmap32
    public Integer clusterRevision; // 2 int16u

    public BarrierControlCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 13, "BarrierControl");
    }

    public void barrierControlGoToPercent(MatterClient client, Integer percentOpen) throws Exception {
        final Integer _percentOpen = percentOpen;
        Object o = new Object() {
            public Integer percentOpen = _percentOpen;
        };
        sendCommand(client, "barrierControlGoToPercent", o);
    }

    public void barrierControlStop(MatterClient client) throws Exception {
        Object o = new Object() {
        };
        sendCommand(client, "barrierControlStop", o);
    }

    public String toString() {
        String str = "";
        str += "barrierMovingState : " + barrierMovingState + "\n";
        str += "barrierSafetyStatus : " + barrierSafetyStatus + "\n";
        str += "barrierCapabilities : " + barrierCapabilities + "\n";
        str += "barrierOpenEvents : " + barrierOpenEvents + "\n";
        str += "barrierCloseEvents : " + barrierCloseEvents + "\n";
        str += "barrierCommandOpenEvents : " + barrierCommandOpenEvents + "\n";
        str += "barrierCommandCloseEvents : " + barrierCommandCloseEvents + "\n";
        str += "barrierOpenPeriod : " + barrierOpenPeriod + "\n";
        str += "barrierClosePeriod : " + barrierClosePeriod + "\n";
        str += "barrierPosition : " + barrierPosition + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
