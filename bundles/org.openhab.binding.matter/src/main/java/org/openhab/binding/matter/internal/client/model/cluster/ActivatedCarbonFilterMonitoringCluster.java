/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */
// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.MatterClient;

/**
 * ActivatedCarbonFilterMonitoring
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class ActivatedCarbonFilterMonitoringCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "ACTIVATED_CARBON_FILTER_MONITORING_CLUSTER";
    public static final int CLUSTER_ID = 0x0072;

    class ReplacementProductStruct {
        public ProductIdentifierTypeEnum productIdentifierType; // ProductIdentifierTypeEnum
        public String productIdentifierValue; // char_string

        public ReplacementProductStruct(ProductIdentifierTypeEnum productIdentifierType,
                String productIdentifierValue) {
            this.productIdentifierType = productIdentifierType;
            this.productIdentifierValue = productIdentifierValue;
        }
    }

    // ZCL Enums
    public enum ChangeIndicationEnum {
        OK(0, "OK"),
        WARNING(1, "Warning"),
        CRITICAL(2, "Critical"),
        UNKNOWN_VALUE(3, "UnknownValue");

        public final int value;
        public final String label;

        private ChangeIndicationEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum DegradationDirectionEnum {
        UP(0, "Up"),
        DOWN(1, "Down"),
        UNKNOWN_VALUE(2, "UnknownValue");

        public final int value;
        public final String label;

        private DegradationDirectionEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum ProductIdentifierTypeEnum {
        UPC(0, "UPC"),
        GTIN_8(1, "GTIN-8"),
        EAN(2, "EAN"),
        GTIN_14(3, "GTIN-14"),
        OEM(4, "OEM"),
        UNKNOWN_VALUE(5, "UnknownValue");

        public final int value;
        public final String label;

        private ProductIdentifierTypeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    // ZCL Bitmaps
    public static class Feature {
        public boolean condition;
        public boolean warning;
        public boolean replacementProductList;

        public Feature(boolean condition, boolean warning, boolean replacementProductList) {
            this.condition = condition;
            this.warning = warning;
            this.replacementProductList = replacementProductList;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static Feature fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new Feature(keys[0], keys[1], keys[2]);
        }
    }

    public Integer condition; // 0 percent reportable
    public DegradationDirectionEnum degradationDirection; // 1 DegradationDirectionEnum reportable
    public ChangeIndicationEnum changeIndication; // 2 ChangeIndicationEnum reportable
    public Boolean inPlaceIndicator; // 3 boolean reportable
    public Integer lastChangedTime; // 4 epoch_s reportable writable
    public ReplacementProductStruct[] replacementProductList; // 5 ReplacementProductStruct reportable
    public List<Integer> generatedCommandList; // 65528 command_id reportable
    public List<Integer> acceptedCommandList; // 65529 command_id reportable
    public List<Integer> eventList; // 65530 event_id reportable
    public List<Integer> attributeList; // 65531 attrib_id reportable
    public Map<String, Boolean> featureMap; // 65532 bitmap32 reportable
    public Integer clusterRevision; // 65533 int16u reportable

    public ActivatedCarbonFilterMonitoringCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 99, "ActivatedCarbonFilterMonitoring");
    }

    public void resetCondition(MatterClient client) throws Exception {
        Object o = new Object() {
        };
        sendCommand(client, "resetCondition", o);
    }

    public String toString() {
        String str = "";
        str += "condition : " + condition + "\n";
        str += "degradationDirection : " + degradationDirection + "\n";
        str += "changeIndication : " + changeIndication + "\n";
        str += "inPlaceIndicator : " + inPlaceIndicator + "\n";
        str += "lastChangedTime : " + lastChangedTime + "\n";
        str += "replacementProductList : " + replacementProductList + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
