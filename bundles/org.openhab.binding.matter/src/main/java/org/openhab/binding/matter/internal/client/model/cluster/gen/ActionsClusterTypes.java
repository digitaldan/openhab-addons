/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * Actions
 *
 * @author Dan Cunningham - Initial contribution
 */
public class ActionsClusterTypes {

    public static final String CLUSTER_NAME = "ACTIONS_CLUSTER";
    public static final int CLUSTER_ID = 0x0025;

    public class ActionStruct {
        public Integer actionID; // int16u
        public String name; // char_string
        public ActionTypeEnum type; // ActionTypeEnum
        public Integer endpointListID; // int16u
        public CommandBits supportedCommands; // CommandBits
        public ActionStateEnum state; // ActionStateEnum

        public ActionStruct(Integer actionID, String name, ActionTypeEnum type, Integer endpointListID,
                CommandBits supportedCommands, ActionStateEnum state) {
            this.actionID = actionID;
            this.name = name;
            this.type = type;
            this.endpointListID = endpointListID;
            this.supportedCommands = supportedCommands;
            this.state = state;
        }
    }

    public class EndpointListStruct {
        public Integer endpointListID; // int16u
        public String name; // char_string
        public EndpointListTypeEnum type; // EndpointListTypeEnum
        public List<Integer> endpoints; // endpoint_no

        public EndpointListStruct(Integer endpointListID, String name, EndpointListTypeEnum type,
                List<Integer> endpoints) {
            this.endpointListID = endpointListID;
            this.name = name;
            this.type = type;
            this.endpoints = endpoints;
        }
    }

    // ZCL Enums
    public enum ActionErrorEnum {
        UNKNOWN(0, "Unknown"),
        INTERRUPTED(1, "Interrupted"),
        UNKNOWN_VALUE(2, "UnknownValue");

        public final int value;
        public final String label;

        private ActionErrorEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum ActionStateEnum {
        INACTIVE(0, "Inactive"),
        ACTIVE(1, "Active"),
        PAUSED(2, "Paused"),
        DISABLED(3, "Disabled"),
        UNKNOWN_VALUE(4, "UnknownValue");

        public final int value;
        public final String label;

        private ActionStateEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum ActionTypeEnum {
        OTHER(0, "Other"),
        SCENE(1, "Scene"),
        SEQUENCE(2, "Sequence"),
        AUTOMATION(3, "Automation"),
        EXCEPTION(4, "Exception"),
        NOTIFICATION(5, "Notification"),
        ALARM(6, "Alarm"),
        UNKNOWN_VALUE(7, "UnknownValue");

        public final int value;
        public final String label;

        private ActionTypeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum EndpointListTypeEnum {
        OTHER(0, "Other"),
        ROOM(1, "Room"),
        ZONE(2, "Zone"),
        UNKNOWN_VALUE(3, "UnknownValue");

        public final int value;
        public final String label;

        private EndpointListTypeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    // ZCL Bitmaps
    public static class CommandBits {
        public boolean instantAction;
        public boolean instantActionWithTransition;
        public boolean startAction;
        public boolean startActionWithDuration;
        public boolean stopAction;
        public boolean pauseAction;
        public boolean pauseActionWithDuration;
        public boolean resumeAction;
        public boolean enableAction;
        public boolean enableActionWithDuration;
        public boolean disableAction;
        public boolean disableActionWithDuration;

        public CommandBits(boolean instantAction, boolean instantActionWithTransition, boolean startAction,
                boolean startActionWithDuration, boolean stopAction, boolean pauseAction,
                boolean pauseActionWithDuration, boolean resumeAction, boolean enableAction,
                boolean enableActionWithDuration, boolean disableAction, boolean disableActionWithDuration) {
            this.instantAction = instantAction;
            this.instantActionWithTransition = instantActionWithTransition;
            this.startAction = startAction;
            this.startActionWithDuration = startActionWithDuration;
            this.stopAction = stopAction;
            this.pauseAction = pauseAction;
            this.pauseActionWithDuration = pauseActionWithDuration;
            this.resumeAction = resumeAction;
            this.enableAction = enableAction;
            this.enableActionWithDuration = enableActionWithDuration;
            this.disableAction = disableAction;
            this.disableActionWithDuration = disableActionWithDuration;
        }
    }

    public static class InstantActionCommandOptions {
        public Integer actionID;
        public Integer invokeID;

        public InstantActionCommandOptions(Integer actionID, Integer invokeID) {
            this.actionID = actionID;
            this.invokeID = invokeID;
        }
    }

    public static class InstantActionWithTransitionCommandOptions {
        public Integer actionID;
        public Integer invokeID;
        public Integer transitionTime;

        public InstantActionWithTransitionCommandOptions(Integer actionID, Integer invokeID, Integer transitionTime) {
            this.actionID = actionID;
            this.invokeID = invokeID;
            this.transitionTime = transitionTime;
        }
    }

    public static class StartActionCommandOptions {
        public Integer actionID;
        public Integer invokeID;

        public StartActionCommandOptions(Integer actionID, Integer invokeID) {
            this.actionID = actionID;
            this.invokeID = invokeID;
        }
    }

    public static class StartActionWithDurationCommandOptions {
        public Integer actionID;
        public Integer invokeID;
        public Integer duration;

        public StartActionWithDurationCommandOptions(Integer actionID, Integer invokeID, Integer duration) {
            this.actionID = actionID;
            this.invokeID = invokeID;
            this.duration = duration;
        }
    }

    public static class StopActionCommandOptions {
        public Integer actionID;
        public Integer invokeID;

        public StopActionCommandOptions(Integer actionID, Integer invokeID) {
            this.actionID = actionID;
            this.invokeID = invokeID;
        }
    }

    public static class PauseActionCommandOptions {
        public Integer actionID;
        public Integer invokeID;

        public PauseActionCommandOptions(Integer actionID, Integer invokeID) {
            this.actionID = actionID;
            this.invokeID = invokeID;
        }
    }

    public static class PauseActionWithDurationCommandOptions {
        public Integer actionID;
        public Integer invokeID;
        public Integer duration;

        public PauseActionWithDurationCommandOptions(Integer actionID, Integer invokeID, Integer duration) {
            this.actionID = actionID;
            this.invokeID = invokeID;
            this.duration = duration;
        }
    }

    public static class ResumeActionCommandOptions {
        public Integer actionID;
        public Integer invokeID;

        public ResumeActionCommandOptions(Integer actionID, Integer invokeID) {
            this.actionID = actionID;
            this.invokeID = invokeID;
        }
    }

    public static class EnableActionCommandOptions {
        public Integer actionID;
        public Integer invokeID;

        public EnableActionCommandOptions(Integer actionID, Integer invokeID) {
            this.actionID = actionID;
            this.invokeID = invokeID;
        }
    }

    public static class EnableActionWithDurationCommandOptions {
        public Integer actionID;
        public Integer invokeID;
        public Integer duration;

        public EnableActionWithDurationCommandOptions(Integer actionID, Integer invokeID, Integer duration) {
            this.actionID = actionID;
            this.invokeID = invokeID;
            this.duration = duration;
        }
    }

    public static class DisableActionCommandOptions {
        public Integer actionID;
        public Integer invokeID;

        public DisableActionCommandOptions(Integer actionID, Integer invokeID) {
            this.actionID = actionID;
            this.invokeID = invokeID;
        }
    }

    public static class DisableActionWithDurationCommandOptions {
        public Integer actionID;
        public Integer invokeID;
        public Integer duration;

        public DisableActionWithDurationCommandOptions(Integer actionID, Integer invokeID, Integer duration) {
            this.actionID = actionID;
            this.invokeID = invokeID;
            this.duration = duration;
        }
    }
}
