/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import static java.util.Map.entry;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * ThermostatUserInterfaceConfiguration
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class ThermostatUserInterfaceConfigurationCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "THERMOSTAT_USER_INTERFACE_CONFIGURATION_CLUSTER";
    public static final int CLUSTER_ID = 0x0204;

    static {
        ATTRIBUTE_MAPPING = Map.ofEntries(entry(79, "temperatureDisplayMode"), entry(157, "keypadLockout"),
                entry(227, "scheduleProgrammingVisibility"), entry(13, "generatedCommandList"),
                entry(11, "acceptedCommandList"), entry(9, "eventList"), entry(7, "attributeList"),
                entry(5, "featureMap"), entry(2, "clusterRevision"));
        COMMAND_MAPPING = Map.ofEntries();
    }

    // ZCL Enums
    public enum KeypadLockoutEnum implements JsonSerializable {
        NOLOCKOUT(0, "NoLockout"),
        LOCKOUT1(1, "Lockout1"),
        LOCKOUT2(2, "Lockout2"),
        LOCKOUT3(3, "Lockout3"),
        LOCKOUT4(4, "Lockout4"),
        LOCKOUT5(5, "Lockout5"),
        UNKNOWN_VALUE(6, "UnknownValue");

        public final int value;
        public final String label;

        private KeypadLockoutEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public enum ScheduleProgrammingVisibilityEnum implements JsonSerializable {
        SCHEDULEPROGRAMMINGPERMITTED(0, "ScheduleProgrammingPermitted"),
        SCHEDULEPROGRAMMINGDENIED(1, "ScheduleProgrammingDenied"),
        UNKNOWN_VALUE(2, "UnknownValue");

        public final int value;
        public final String label;

        private ScheduleProgrammingVisibilityEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public enum TemperatureDisplayModeEnum implements JsonSerializable {
        CELSIUS(0, "Celsius"),
        FAHRENHEIT(1, "Fahrenheit"),
        UNKNOWN_VALUE(2, "UnknownValue");

        public final int value;
        public final String label;

        private TemperatureDisplayModeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public TemperatureDisplayModeEnum temperatureDisplayMode; // 79 TemperatureDisplayModeEnum
    public KeypadLockoutEnum keypadLockout; // 157 KeypadLockoutEnum
    public ScheduleProgrammingVisibilityEnum scheduleProgrammingVisibility; // 227 ScheduleProgrammingVisibilityEnum
    public List<Integer> generatedCommandList; // 13 command_id
    public List<Integer> acceptedCommandList; // 11 command_id
    public List<Integer> eventList; // 9 event_id
    public List<Integer> attributeList; // 7 attrib_id
    public Map<String, Boolean> featureMap; // 5 bitmap32
    public Integer clusterRevision; // 2 int16u

    public ThermostatUserInterfaceConfigurationCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 75, "ThermostatUserInterfaceConfiguration");
    }

    public String toString() {
        String str = "";
        str += "temperatureDisplayMode : " + temperatureDisplayMode + "\n";
        str += "keypadLockout : " + keypadLockout + "\n";
        str += "scheduleProgrammingVisibility : " + scheduleProgrammingVisibility + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
