/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import static java.util.Map.entry;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.MatterClient;
import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * WiFiNetworkDiagnostics
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class WiFiNetworkDiagnosticsCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "WIFI_NETWORK_DIAGNOSTICS_CLUSTER";
    public static final int CLUSTER_ID = 0x0036;

    static {
        ATTRIBUTE_MAPPING = Map.ofEntries(entry(85, "bssid"), entry(165, "securityType"), entry(232, "wiFiVersion"),
                entry(290, "channelNumber"), entry(336, "rssi"), entry(375, "beaconLostCount"),
                entry(410, "beaconRxCount"), entry(441, "packetMulticastRxCount"), entry(467, "packetMulticastTxCount"),
                entry(491, "packetUnicastRxCount"), entry(514, "packetUnicastTxCount"), entry(536, "currentMaxRate"),
                entry(554, "overrunCount"), entry(13, "generatedCommandList"), entry(11, "acceptedCommandList"),
                entry(9, "eventList"), entry(7, "attributeList"), entry(5, "featureMap"), entry(2, "clusterRevision"));
        COMMAND_MAPPING = Map.ofEntries(entry(54, "resetCounts"));
    }

    // ZCL Enums
    public enum AssociationFailureCauseEnum implements JsonSerializable {
        UNKNOWN(0, "Unknown"),
        ASSOCIATIONFAILED(1, "AssociationFailed"),
        AUTHENTICATIONFAILED(2, "AuthenticationFailed"),
        SSIDNOTFOUND(3, "SsidNotFound"),
        UNKNOWN_VALUE(4, "UnknownValue");

        public final int value;
        public final String label;

        private AssociationFailureCauseEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public enum ConnectionStatusEnum implements JsonSerializable {
        CONNECTED(0, "Connected"),
        NOTCONNECTED(1, "NotConnected"),
        UNKNOWN_VALUE(2, "UnknownValue");

        public final int value;
        public final String label;

        private ConnectionStatusEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public enum SecurityTypeEnum implements JsonSerializable {
        UNSPECIFIED(0, "Unspecified"),
        NONE(1, "None"),
        WEP(2, "WEP"),
        WPA(3, "WPA"),
        WPA2(4, "WPA2"),
        WPA3(5, "WPA3"),
        UNKNOWN_VALUE(6, "UnknownValue");

        public final int value;
        public final String label;

        private SecurityTypeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public enum WiFiVersionEnum implements JsonSerializable {
        A(0, "a"),
        B(1, "b"),
        G(2, "g"),
        N(3, "n"),
        AC(4, "ac"),
        AX(5, "ax"),
        AH(6, "ah"),
        UNKNOWN_VALUE(7, "UnknownValue");

        public final int value;
        public final String label;

        private WiFiVersionEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    // ZCL Bitmaps
    public static class Feature implements JsonSerializable {
        public boolean packetCounts;
        public boolean errorCounts;

        public Feature(boolean packetCounts, boolean errorCounts) {
            this.packetCounts = packetCounts;
            this.errorCounts = errorCounts;
        }

        public String toJson() {
            String out = "{";
            out += "\"packetCounts\" : " + packetCounts + ",";
            out += "\"errorCounts\" : " + errorCounts + "";
            out += "}";
            return out;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static Feature fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new Feature(keys[0], keys[1]);
        }
    }

    public String bssid; // 85 octet_string
    public SecurityTypeEnum securityType; // 165 SecurityTypeEnum
    public WiFiVersionEnum wiFiVersion; // 232 WiFiVersionEnum
    public Integer channelNumber; // 290 int16u
    public Integer rssi; // 336 int8s
    public Integer beaconLostCount; // 375 int32u
    public Integer beaconRxCount; // 410 int32u
    public Integer packetMulticastRxCount; // 441 int32u
    public Integer packetMulticastTxCount; // 467 int32u
    public Integer packetUnicastRxCount; // 491 int32u
    public Integer packetUnicastTxCount; // 514 int32u
    public Long currentMaxRate; // 536 int64u
    public Long overrunCount; // 554 int64u
    public List<Integer> generatedCommandList; // 13 command_id
    public List<Integer> acceptedCommandList; // 11 command_id
    public List<Integer> eventList; // 9 event_id
    public List<Integer> attributeList; // 7 attrib_id
    public Map<String, Boolean> featureMap; // 5 bitmap32
    public Integer clusterRevision; // 2 int16u

    public WiFiNetworkDiagnosticsCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 84, "WiFiNetworkDiagnostics");
    }

    public void resetCounts(MatterClient client) throws Exception {
        Object o = new Object() {
        };
        sendCommand(client, "resetCounts", o);
    }

    public String toString() {
        String str = "";
        str += "bssid : " + bssid + "\n";
        str += "securityType : " + securityType + "\n";
        str += "wiFiVersion : " + wiFiVersion + "\n";
        str += "channelNumber : " + channelNumber + "\n";
        str += "rssi : " + rssi + "\n";
        str += "beaconLostCount : " + beaconLostCount + "\n";
        str += "beaconRxCount : " + beaconRxCount + "\n";
        str += "packetMulticastRxCount : " + packetMulticastRxCount + "\n";
        str += "packetMulticastTxCount : " + packetMulticastTxCount + "\n";
        str += "packetUnicastRxCount : " + packetUnicastRxCount + "\n";
        str += "packetUnicastTxCount : " + packetUnicastTxCount + "\n";
        str += "currentMaxRate : " + currentMaxRate + "\n";
        str += "overrunCount : " + overrunCount + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
