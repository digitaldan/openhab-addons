/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */
// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import java.util.List;
import java.util.Map;

/**
 * AccessControl
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class AccessControlCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "ACCESS_CONTROL_CLUSTER";
    public static final int CLUSTER_ID = 0x001F;

    class AccessControlTargetStruct {
        public List<Integer> cluster; // cluster_id
        public List<Integer> endpoint; // endpoint_no
        public Integer deviceType; // devtype_id

        public AccessControlTargetStruct(List<Integer> cluster, List<Integer> endpoint, Integer deviceType) {
            this.cluster = cluster;
            this.endpoint = endpoint;
            this.deviceType = deviceType;
        }
    }

    class AccessControlEntryStruct {
        public AccessControlEntryPrivilegeEnum privilege; // AccessControlEntryPrivilegeEnum
        public AccessControlEntryAuthModeEnum authMode; // AccessControlEntryAuthModeEnum
        public Long subjects; // int64u
        public AccessControlTargetStruct[] targets; // AccessControlTargetStruct
        public Integer fabricIndex; // fabric_idx

        public AccessControlEntryStruct(AccessControlEntryPrivilegeEnum privilege,
                AccessControlEntryAuthModeEnum authMode, Long subjects, AccessControlTargetStruct[] targets,
                Integer fabricIndex) {
            this.privilege = privilege;
            this.authMode = authMode;
            this.subjects = subjects;
            this.targets = targets;
            this.fabricIndex = fabricIndex;
        }
    }

    class AccessControlExtensionStruct {
        public String data; // octet_string
        public Integer fabricIndex; // fabric_idx

        public AccessControlExtensionStruct(String data, Integer fabricIndex) {
            this.data = data;
            this.fabricIndex = fabricIndex;
        }
    }

    // ZCL Enums
    public enum AccessControlEntryAuthModeEnum {
        PASE(1, "PASE"),
        CASE(2, "CASE"),
        GROUP(3, "Group"),
        UNKNOWN_VALUE(0, "UnknownValue");

        public final int value;
        public final String label;

        private AccessControlEntryAuthModeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum AccessControlEntryPrivilegeEnum {
        VIEW(1, "View"),
        PROXY_VIEW(2, "Proxy View"),
        OPERATE(3, "Operate"),
        MANAGE(4, "Manage"),
        ADMINISTER(5, "Administer"),
        UNKNOWN_VALUE(0, "UnknownValue");

        public final int value;
        public final String label;

        private AccessControlEntryPrivilegeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum ChangeTypeEnum {
        CHANGED(0, "Changed"),
        ADDED(1, "Added"),
        REMOVED(2, "Removed"),
        UNKNOWN_VALUE(3, "UnknownValue");

        public final int value;
        public final String label;

        private ChangeTypeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public AccessControlEntryStruct[] acl; // 0 AccessControlEntryStruct reportable writable
    public AccessControlExtensionStruct[] extension; // 1 AccessControlExtensionStruct reportable writable
    public Integer subjectsPerAccessControlEntry; // 2 int16u reportable
    public Integer targetsPerAccessControlEntry; // 3 int16u reportable
    public Integer accessControlEntriesPerFabric; // 4 int16u reportable
    public List<Integer> generatedCommandList; // 65528 command_id reportable
    public List<Integer> acceptedCommandList; // 65529 command_id reportable
    public List<Integer> eventList; // 65530 event_id reportable
    public List<Integer> attributeList; // 65531 attrib_id reportable
    public Map<String, Boolean> featureMap; // 65532 bitmap32 reportable
    public Integer clusterRevision; // 65533 int16u reportable

    public AccessControlCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 41, "AccessControl");
    }

    public String toString() {
        String str = "";
        str += "acl : " + acl + "\n";
        str += "extension : " + extension + "\n";
        str += "subjectsPerAccessControlEntry : " + subjectsPerAccessControlEntry + "\n";
        str += "targetsPerAccessControlEntry : " + targetsPerAccessControlEntry + "\n";
        str += "accessControlEntriesPerFabric : " + accessControlEntriesPerFabric + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
