/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.Map;
import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.BaseCluster;
import org.openhab.binding.matter.internal.client.model.cluster.gen.SmokeCoAlarmClusterTypes.*;

/**
 * SmokeCoAlarm
 *
 * @author Dan Cunningham - Initial contribution
 */
public class SmokeCoAlarmCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "SmokeCoAlarm";
    public static final int CLUSTER_ID = 0x005C;

    public ExpressedStateEnum expressedState; // 0 ExpressedStateEnum reportable 
    public AlarmStateEnum smokeState; // 1 AlarmStateEnum reportable 
    public AlarmStateEnum COState; // 2 AlarmStateEnum reportable 
    public AlarmStateEnum batteryAlert; // 3 AlarmStateEnum reportable 
    public MuteStateEnum deviceMuted; // 4 MuteStateEnum reportable 
    public Boolean testInProgress; // 5 boolean reportable 
    public Boolean hardwareFaultAlert; // 6 boolean reportable 
    public EndOfServiceEnum endOfServiceAlert; // 7 EndOfServiceEnum reportable 
    public AlarmStateEnum interconnectSmokeAlarm; // 8 AlarmStateEnum reportable 
    public AlarmStateEnum interconnectCOAlarm; // 9 AlarmStateEnum reportable 
    public ContaminationStateEnum contaminationState; // 10 ContaminationStateEnum reportable 
    public SensitivityEnum smokeSensitivityLevel; // 11 SensitivityEnum reportable writable
    public Integer expiryDate; // 12 epoch_s reportable 
    public List<Integer> generatedCommandList; // 65528 command_id reportable 
    public List<Integer> acceptedCommandList; // 65529 command_id reportable 
    public List<Integer> eventList; // 65530 event_id reportable 
    public List<Integer> attributeList; // 65531 attrib_id reportable 
    public Map<String, Boolean> featureMap; // 65532 bitmap32 reportable 
    public Integer clusterRevision; // 65533 int16u reportable 

    public SmokeCoAlarmCluster(String nodeId, int endpointId) {
        super(nodeId, endpointId, 67, "SmokeCoAlarm");
    }

    public String toString() {
        String str = "";
        str += "expressedState : " + expressedState + "\n";
        str += "smokeState : " + smokeState + "\n";
        str += "COState : " + COState + "\n";
        str += "batteryAlert : " + batteryAlert + "\n";
        str += "deviceMuted : " + deviceMuted + "\n";
        str += "testInProgress : " + testInProgress + "\n";
        str += "hardwareFaultAlert : " + hardwareFaultAlert + "\n";
        str += "endOfServiceAlert : " + endOfServiceAlert + "\n";
        str += "interconnectSmokeAlarm : " + interconnectSmokeAlarm + "\n";
        str += "interconnectCOAlarm : " + interconnectCOAlarm + "\n";
        str += "contaminationState : " + contaminationState + "\n";
        str += "smokeSensitivityLevel : " + smokeSensitivityLevel + "\n";
        str += "expiryDate : " + expiryDate + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
