/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import org.openhab.binding.matter.internal.client.model.cluster.ClusterCommand;
import org.openhab.binding.matter.internal.client.model.cluster.gen.TimeSynchronizationClusterTypes.*;

/**
 * TimeSynchronization
 *
 * @author Dan Cunningham - Initial contribution
 */
public class TimeSynchronizationClusterCommands {

    public static ClusterCommand setUTCTime(Long UTCTime, GranularityEnum granularity, TimeSourceEnum timeSource) {
        return new ClusterCommand("setUTCTime", new SetUTCTimeCommandOptions(UTCTime, granularity, timeSource));
    }

    public static ClusterCommand setTrustedTimeSource(FabricScopedTrustedTimeSourceStruct[] trustedTimeSource) {
        return new ClusterCommand("setTrustedTimeSource", new SetTrustedTimeSourceCommandOptions(trustedTimeSource));
    }

    public static ClusterCommand setTimeZone(TimeZoneStruct[] timeZone) {
        return new ClusterCommand("setTimeZone", new SetTimeZoneCommandOptions(timeZone));
    }

    public static ClusterCommand setTimeZoneResponse(Boolean DSTOffsetRequired) {
        return new ClusterCommand("setTimeZoneResponse", new SetTimeZoneResponseCommandOptions(DSTOffsetRequired));
    }

    public static ClusterCommand setDSTOffset(DSTOffsetStruct[] DSTOffset) {
        return new ClusterCommand("setDSTOffset", new SetDSTOffsetCommandOptions(DSTOffset));
    }

    public static ClusterCommand setDefaultNTP(String defaultNTP) {
        return new ClusterCommand("setDefaultNTP", new SetDefaultNTPCommandOptions(defaultNTP));
    }
}
