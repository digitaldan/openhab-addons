/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import static java.util.Map.entry;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.MatterClient;
import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * Identify
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class IdentifyCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "IDENTIFY_CLUSTER";
    public static final int CLUSTER_ID = 0x0003;

    static {
        ATTRIBUTE_MAPPING = Map.ofEntries(entry(45, "identifyTime"), entry(122, "identifyType"),
                entry(13, "generatedCommandList"), entry(11, "acceptedCommandList"), entry(9, "eventList"),
                entry(7, "attributeList"), entry(5, "featureMap"), entry(2, "clusterRevision"));
        COMMAND_MAPPING = Map.ofEntries(entry(27, "identify"), entry(80, "triggerEffect"));
    }

    // ZCL Enums
    public enum EffectIdentifierEnum implements JsonSerializable {
        BLINK(0, "Blink"),
        BREATHE(1, "Breathe"),
        OKAY(2, "Okay"),
        CHANNELCHANGE(11, "ChannelChange"),
        FINISHEFFECT(254, "FinishEffect"),
        STOPEFFECT(255, "StopEffect"),
        UNKNOWN_VALUE(3, "UnknownValue");

        public final int value;
        public final String label;

        private EffectIdentifierEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public enum EffectVariantEnum implements JsonSerializable {
        DEFAULT(0, "Default"),
        UNKNOWN_VALUE(1, "UnknownValue");

        public final int value;
        public final String label;

        private EffectVariantEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public enum IdentifyTypeEnum implements JsonSerializable {
        NONE(0, "None"),
        LIGHTOUTPUT(1, "LightOutput"),
        VISIBLEINDICATOR(2, "VisibleIndicator"),
        AUDIBLEBEEP(3, "AudibleBeep"),
        DISPLAY(4, "Display"),
        ACTUATOR(5, "Actuator"),
        UNKNOWN_VALUE(6, "UnknownValue");

        public final int value;
        public final String label;

        private IdentifyTypeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }

        public String toJson() {
            return "\"" + this.label + "\"";
        }
    };

    public Integer identifyTime; // 45 int16u
    public IdentifyTypeEnum identifyType; // 122 IdentifyTypeEnum
    public List<Integer> generatedCommandList; // 13 command_id
    public List<Integer> acceptedCommandList; // 11 command_id
    public List<Integer> eventList; // 9 event_id
    public List<Integer> attributeList; // 7 attrib_id
    public Map<String, Boolean> featureMap; // 5 bitmap32
    public Integer clusterRevision; // 2 int16u

    public IdentifyCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 36, "Identify");
    }

    public void identify(MatterClient client, Integer identifyTime) throws Exception {
        final Integer _identifyTime = identifyTime;
        Object o = new Object() {
            public Integer identifyTime = _identifyTime;
        };
        sendCommand(client, "identify", o);
    }

    public void triggerEffect(MatterClient client, EffectIdentifierEnum effectIdentifier,
            EffectVariantEnum effectVariant) throws Exception {
        final EffectIdentifierEnum _effectIdentifier = effectIdentifier;
        final EffectVariantEnum _effectVariant = effectVariant;
        Object o = new Object() {
            public EffectIdentifierEnum effectIdentifier = _effectIdentifier;
            public EffectVariantEnum effectVariant = _effectVariant;
        };
        sendCommand(client, "triggerEffect", o);
    }

    public String toString() {
        String str = "";
        str += "identifyTime : " + identifyTime + "\n";
        str += "identifyType : " + identifyType + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
