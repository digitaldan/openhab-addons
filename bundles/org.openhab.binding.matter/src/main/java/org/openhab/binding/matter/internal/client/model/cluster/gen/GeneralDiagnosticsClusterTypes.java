/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * GeneralDiagnostics
 *
 * @author Dan Cunningham - Initial contribution
 */
public class GeneralDiagnosticsClusterTypes {

    public static final String CLUSTER_NAME = "GENERAL_DIAGNOSTICS_CLUSTER";
    public static final int CLUSTER_ID = 0x0033;

    public class NetworkInterface {
        public String name; // char_string
        public Boolean isOperational; // boolean
        public Boolean offPremiseServicesReachableIPv4; // boolean
        public Boolean offPremiseServicesReachableIPv6; // boolean
        public String hardwareAddress; // octet_string
        public String IPv4Addresses; // octet_string
        public String IPv6Addresses; // octet_string
        public InterfaceTypeEnum type; // InterfaceTypeEnum

        public NetworkInterface(String name, Boolean isOperational, Boolean offPremiseServicesReachableIPv4,
                Boolean offPremiseServicesReachableIPv6, String hardwareAddress, String IPv4Addresses,
                String IPv6Addresses, InterfaceTypeEnum type) {
            this.name = name;
            this.isOperational = isOperational;
            this.offPremiseServicesReachableIPv4 = offPremiseServicesReachableIPv4;
            this.offPremiseServicesReachableIPv6 = offPremiseServicesReachableIPv6;
            this.hardwareAddress = hardwareAddress;
            this.IPv4Addresses = IPv4Addresses;
            this.IPv6Addresses = IPv6Addresses;
            this.type = type;
        }
    }

    // ZCL Enums
    public enum BootReasonEnum {
        UNSPECIFIED(0, "Unspecified"),
        POWERONREBOOT(1, "PowerOnReboot"),
        BROWNOUTRESET(2, "BrownOutReset"),
        SOFTWAREWATCHDOGRESET(3, "SoftwareWatchdogReset"),
        HARDWAREWATCHDOGRESET(4, "HardwareWatchdogReset"),
        SOFTWAREUPDATECOMPLETED(5, "SoftwareUpdateCompleted"),
        SOFTWARERESET(6, "SoftwareReset"),
        UNKNOWN_VALUE(7, "UnknownValue");

        public final int value;
        public final String label;

        private BootReasonEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum HardwareFaultEnum {
        UNSPECIFIED(0, "Unspecified"),
        RADIO(1, "Radio"),
        SENSOR(2, "Sensor"),
        RESETTABLEOVERTEMP(3, "ResettableOverTemp"),
        NONRESETTABLEOVERTEMP(4, "NonResettableOverTemp"),
        POWERSOURCE(5, "PowerSource"),
        VISUALDISPLAYFAULT(6, "VisualDisplayFault"),
        AUDIOOUTPUTFAULT(7, "AudioOutputFault"),
        USERINTERFACEFAULT(8, "UserInterfaceFault"),
        NONVOLATILEMEMORYERROR(9, "NonVolatileMemoryError"),
        TAMPERDETECTED(10, "TamperDetected"),
        UNKNOWN_VALUE(11, "UnknownValue");

        public final int value;
        public final String label;

        private HardwareFaultEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum InterfaceTypeEnum {
        UNSPECIFIED(0, "Unspecified"),
        WIFI(1, "WiFi"),
        ETHERNET(2, "Ethernet"),
        CELLULAR(3, "Cellular"),
        THREAD(4, "Thread"),
        UNKNOWN_VALUE(5, "UnknownValue");

        public final int value;
        public final String label;

        private InterfaceTypeEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum NetworkFaultEnum {
        UNSPECIFIED(0, "Unspecified"),
        HARDWAREFAILURE(1, "HardwareFailure"),
        NETWORKJAMMED(2, "NetworkJammed"),
        CONNECTIONFAILED(3, "ConnectionFailed"),
        UNKNOWN_VALUE(4, "UnknownValue");

        public final int value;
        public final String label;

        private NetworkFaultEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public enum RadioFaultEnum {
        UNSPECIFIED(0, "Unspecified"),
        WIFIFAULT(1, "WiFiFault"),
        CELLULARFAULT(2, "CellularFault"),
        THREADFAULT(3, "ThreadFault"),
        NFCFAULT(4, "NFCFault"),
        BLEFAULT(5, "BLEFault"),
        ETHERNETFAULT(6, "EthernetFault"),
        UNKNOWN_VALUE(7, "UnknownValue");

        public final int value;
        public final String label;

        private RadioFaultEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    public static class TestEventTriggerCommandOptions {
        public String enableKey;
        public Long eventTrigger;

        public TestEventTriggerCommandOptions(String enableKey, Long eventTrigger) {
            this.enableKey = enableKey;
            this.eventTrigger = eventTrigger;
        }
    }

    public static class TimeSnapshotCommandOptions {
        public TimeSnapshotCommandOptions() {
        }
    }

    public static class TimeSnapshotResponseCommandOptions {
        public Long systemTimeUs;
        public Long UTCTimeUs;

        public TimeSnapshotResponseCommandOptions(Long systemTimeUs, Long UTCTimeUs) {
            this.systemTimeUs = systemTimeUs;
            this.UTCTimeUs = UTCTimeUs;
        }
    }
}
