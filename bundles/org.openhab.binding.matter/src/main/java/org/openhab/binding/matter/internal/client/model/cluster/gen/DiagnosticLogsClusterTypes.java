/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.Map;
import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;
import static java.util.Map.entry;  

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * DiagnosticLogs
 *
 * @author Dan Cunningham - Initial contribution
 */
public class DiagnosticLogsClusterTypes {

    public static final String CLUSTER_NAME = "DIAGNOSTIC_LOGS_CLUSTER";
    public static final int CLUSTER_ID = 0x0032;

    //ZCL Enums
    public enum IntentEnum {
        ENDUSERSUPPORT(0, "EndUserSupport"),
        NETWORKDIAG(1, "NetworkDiag"),
        CRASHLOGS(2, "CrashLogs"),
        UNKNOWN_VALUE(3,"UnknownValue");

        public final int value;
        public final String label;
        private IntentEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum StatusEnum {
        SUCCESS(0, "Success"),
        EXHAUSTED(1, "Exhausted"),
        NOLOGS(2, "NoLogs"),
        BUSY(3, "Busy"),
        DENIED(4, "Denied"),
        UNKNOWN_VALUE(5,"UnknownValue");

        public final int value;
        public final String label;
        private StatusEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum TransferProtocolEnum {
        RESPONSEPAYLOAD(0, "ResponsePayload"),
        BDX(1, "BDX"),
        UNKNOWN_VALUE(2,"UnknownValue");

        public final int value;
        public final String label;
        private TransferProtocolEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };


    public static class RetrieveLogsRequestCommandOptions {
        public IntentEnum intent;
        public TransferProtocolEnum requestedProtocol;
        public String transferFileDesignator;
        public  RetrieveLogsRequestCommandOptions(IntentEnum intent, TransferProtocolEnum requestedProtocol, String transferFileDesignator){
            this.intent = intent;
            this.requestedProtocol = requestedProtocol;
            this.transferFileDesignator = transferFileDesignator;
        }
    }
    public static class RetrieveLogsResponseCommandOptions {
        public StatusEnum status;
        public String logContent;
        public Long UTCTimeStamp;
        public Long timeSinceBoot;
        public  RetrieveLogsResponseCommandOptions(StatusEnum status, String logContent, Long UTCTimeStamp, Long timeSinceBoot){
            this.status = status;
            this.logContent = logContent;
            this.UTCTimeStamp = UTCTimeStamp;
            this.timeSinceBoot = timeSinceBoot;
        }
    }
}
