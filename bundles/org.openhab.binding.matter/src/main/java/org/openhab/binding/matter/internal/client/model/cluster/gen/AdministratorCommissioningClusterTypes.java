/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.Map;
import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;
import static java.util.Map.entry;  

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * AdministratorCommissioning
 *
 * @author Dan Cunningham - Initial contribution
 */
public class AdministratorCommissioningClusterTypes {

    public static final String CLUSTER_NAME = "ADMINISTRATOR_COMMISSIONING_CLUSTER";
    public static final int CLUSTER_ID = 0x003C;

    //ZCL Enums
    public enum CommissioningWindowStatusEnum {
        WINDOWNOTOPEN(0, "WindowNotOpen"),
        ENHANCEDWINDOWOPEN(1, "EnhancedWindowOpen"),
        BASICWINDOWOPEN(2, "BasicWindowOpen"),
        UNKNOWN_VALUE(3,"UnknownValue");

        public final int value;
        public final String label;
        private CommissioningWindowStatusEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum StatusCode {
        BUSY(2, "Busy"),
        PAKEPARAMETERERROR(3, "PAKEParameterError"),
        WINDOWNOTOPEN(4, "WindowNotOpen"),
        UNKNOWN_VALUE(0,"UnknownValue");

        public final int value;
        public final String label;
        private StatusCode(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    //ZCL Bitmaps
    public static class Feature {
        public boolean basic;
        public Feature(boolean basic){
            this.basic = basic;
        }
    }

    public static class OpenCommissioningWindowCommandOptions {
        public Integer commissioningTimeout;
        public String PAKEPasscodeVerifier;
        public Integer discriminator;
        public Integer iterations;
        public String salt;
        public  OpenCommissioningWindowCommandOptions(Integer commissioningTimeout, String PAKEPasscodeVerifier, Integer discriminator, Integer iterations, String salt){
            this.commissioningTimeout = commissioningTimeout;
            this.PAKEPasscodeVerifier = PAKEPasscodeVerifier;
            this.discriminator = discriminator;
            this.iterations = iterations;
            this.salt = salt;
        }
    }
    public static class OpenBasicCommissioningWindowCommandOptions {
        public Integer commissioningTimeout;
        public  OpenBasicCommissioningWindowCommandOptions(Integer commissioningTimeout){
            this.commissioningTimeout = commissioningTimeout;
        }
    }
    public static class RevokeCommissioningCommandOptions {
        public  RevokeCommissioningCommandOptions(){
        }
    }
}
