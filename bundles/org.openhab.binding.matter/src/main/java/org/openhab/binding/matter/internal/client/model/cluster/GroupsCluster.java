/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import static java.util.Map.entry;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.MatterClient;
import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * Groups
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class GroupsCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "GROUPS_CLUSTER";
    public static final int CLUSTER_ID = 0x0004;

    static {
        ATTRIBUTE_MAPPING = Map.ofEntries(entry(39, "nameSupport"), entry(13, "generatedCommandList"),
                entry(11, "acceptedCommandList"), entry(9, "eventList"), entry(7, "attributeList"),
                entry(5, "featureMap"), entry(2, "clusterRevision"));
        COMMAND_MAPPING = Map.ofEntries(entry(22, "addGroup"), entry(220, "addGroupResponse"), entry(75, "viewGroup"),
                entry(233, "viewGroupResponse"), entry(125, "getGroupMembership"),
                entry(242, "getGroupMembershipResponse"), entry(157, "removeGroup"), entry(250, "removeGroupResponse"),
                entry(183, "removeAllGroups"), entry(205, "addGroupIfIdentifying"));
    }

    // ZCL Bitmaps
    public static class Feature implements JsonSerializable {
        public boolean groupNames;

        public Feature(boolean groupNames) {
            this.groupNames = groupNames;
        }

        public String toJson() {
            String out = "{";
            out += "\"groupNames\" : " + groupNames + "";
            out += "}";
            return out;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static Feature fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new Feature(keys[0]);
        }
    }

    public static class NameSupportBitmap implements JsonSerializable {
        public boolean groupNames;

        public NameSupportBitmap(boolean groupNames) {
            this.groupNames = groupNames;
        }

        public String toJson() {
            String out = "{";
            out += "\"groupNames\" : " + groupNames + "";
            out += "}";
            return out;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static NameSupportBitmap fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new NameSupportBitmap(keys[0]);
        }
    }

    public NameSupportBitmap nameSupport; // 39 NameSupportBitmap
    public List<Integer> generatedCommandList; // 13 command_id
    public List<Integer> acceptedCommandList; // 11 command_id
    public List<Integer> eventList; // 9 event_id
    public List<Integer> attributeList; // 7 attrib_id
    public Map<String, Boolean> featureMap; // 5 bitmap32
    public Integer clusterRevision; // 2 int16u

    public GroupsCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 29, "Groups");
    }

    public void addGroup(MatterClient client, List<Integer> groupID, String groupName) throws Exception {
        final List<Integer> _groupID = groupID;
        final String _groupName = groupName;
        Object o = new Object() {
            public List<Integer> groupID = _groupID;
            public String groupName = _groupName;
        };
        sendCommand(client, "addGroup", o);
    }

    public void addGroupResponse(MatterClient client, Integer status, List<Integer> groupID) throws Exception {
        final Integer _status = status;
        final List<Integer> _groupID = groupID;
        Object o = new Object() {
            public Integer status = _status;
            public List<Integer> groupID = _groupID;
        };
        sendCommand(client, "addGroupResponse", o);
    }

    public void viewGroup(MatterClient client, List<Integer> groupID) throws Exception {
        final List<Integer> _groupID = groupID;
        Object o = new Object() {
            public List<Integer> groupID = _groupID;
        };
        sendCommand(client, "viewGroup", o);
    }

    public void viewGroupResponse(MatterClient client, Integer status, List<Integer> groupID, String groupName)
            throws Exception {
        final Integer _status = status;
        final List<Integer> _groupID = groupID;
        final String _groupName = groupName;
        Object o = new Object() {
            public Integer status = _status;
            public List<Integer> groupID = _groupID;
            public String groupName = _groupName;
        };
        sendCommand(client, "viewGroupResponse", o);
    }

    public void getGroupMembership(MatterClient client, List<Integer> groupList) throws Exception {
        final List<Integer> _groupList = groupList;
        Object o = new Object() {
            public List<Integer> groupList = _groupList;
        };
        sendCommand(client, "getGroupMembership", o);
    }

    public void getGroupMembershipResponse(MatterClient client, Integer capacity, List<Integer> groupList)
            throws Exception {
        final Integer _capacity = capacity;
        final List<Integer> _groupList = groupList;
        Object o = new Object() {
            public Integer capacity = _capacity;
            public List<Integer> groupList = _groupList;
        };
        sendCommand(client, "getGroupMembershipResponse", o);
    }

    public void removeGroup(MatterClient client, List<Integer> groupID) throws Exception {
        final List<Integer> _groupID = groupID;
        Object o = new Object() {
            public List<Integer> groupID = _groupID;
        };
        sendCommand(client, "removeGroup", o);
    }

    public void removeGroupResponse(MatterClient client, Integer status, List<Integer> groupID) throws Exception {
        final Integer _status = status;
        final List<Integer> _groupID = groupID;
        Object o = new Object() {
            public Integer status = _status;
            public List<Integer> groupID = _groupID;
        };
        sendCommand(client, "removeGroupResponse", o);
    }

    public void removeAllGroups(MatterClient client) throws Exception {
        Object o = new Object() {
        };
        sendCommand(client, "removeAllGroups", o);
    }

    public void addGroupIfIdentifying(MatterClient client, List<Integer> groupID, String groupName) throws Exception {
        final List<Integer> _groupID = groupID;
        final String _groupName = groupName;
        Object o = new Object() {
            public List<Integer> groupID = _groupID;
            public String groupName = _groupName;
        };
        sendCommand(client, "addGroupIfIdentifying", o);
    }

    public String toString() {
        String str = "";
        str += "nameSupport : " + nameSupport + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
