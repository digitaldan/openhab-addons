/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * UnitTesting
 *
 * @author Dan Cunningham - Initial contribution
 */
public class UnitTestingClusterTypes {

    public static final String CLUSTER_NAME = "UNIT_TESTING_CLUSTER";
    public static final int CLUSTER_ID = 0xFFF1FC05;

    public class SimpleStruct {
        public Integer a; // int8u
        public Boolean b; // boolean
        public SimpleEnum c; // SimpleEnum
        public String d; // octet_string
        public String e; // char_string
        public SimpleBitmap f; // SimpleBitmap
        public Float g; // single
        public Double h; // double

        public SimpleStruct(Integer a, Boolean b, SimpleEnum c, String d, String e, SimpleBitmap f, Float g, Double h) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.d = d;
            this.e = e;
            this.f = f;
            this.g = g;
            this.h = h;
        }
    }

    public class TestFabricScoped {
        public Integer fabricSensitiveInt8u; // int8u
        public Integer optionalFabricSensitiveInt8u; // int8u
        public Integer nullableFabricSensitiveInt8u; // int8u
        public Integer nullableOptionalFabricSensitiveInt8u; // int8u
        public String fabricSensitiveCharString; // char_string
        public SimpleStruct[] fabricSensitiveStruct; // SimpleStruct
        public Integer fabricSensitiveInt8uList; // int8u
        public Integer fabricIndex; // fabric_idx

        public TestFabricScoped(Integer fabricSensitiveInt8u, Integer optionalFabricSensitiveInt8u,
                Integer nullableFabricSensitiveInt8u, Integer nullableOptionalFabricSensitiveInt8u,
                String fabricSensitiveCharString, SimpleStruct[] fabricSensitiveStruct,
                Integer fabricSensitiveInt8uList, Integer fabricIndex) {
            this.fabricSensitiveInt8u = fabricSensitiveInt8u;
            this.optionalFabricSensitiveInt8u = optionalFabricSensitiveInt8u;
            this.nullableFabricSensitiveInt8u = nullableFabricSensitiveInt8u;
            this.nullableOptionalFabricSensitiveInt8u = nullableOptionalFabricSensitiveInt8u;
            this.fabricSensitiveCharString = fabricSensitiveCharString;
            this.fabricSensitiveStruct = fabricSensitiveStruct;
            this.fabricSensitiveInt8uList = fabricSensitiveInt8uList;
            this.fabricIndex = fabricIndex;
        }
    }

    public class NullablesAndOptionalsStruct {
        public Integer nullableInt; // int16u
        public Integer optionalInt; // int16u
        public Integer nullableOptionalInt; // int16u
        public String nullableString; // char_string
        public String optionalString; // char_string
        public String nullableOptionalString; // char_string
        public SimpleStruct[] nullableStruct; // SimpleStruct
        public SimpleStruct[] optionalStruct; // SimpleStruct
        public SimpleStruct[] nullableOptionalStruct; // SimpleStruct
        public SimpleEnum nullableList; // SimpleEnum
        public SimpleEnum optionalList; // SimpleEnum
        public SimpleEnum nullableOptionalList; // SimpleEnum

        public NullablesAndOptionalsStruct(Integer nullableInt, Integer optionalInt, Integer nullableOptionalInt,
                String nullableString, String optionalString, String nullableOptionalString,
                SimpleStruct[] nullableStruct, SimpleStruct[] optionalStruct, SimpleStruct[] nullableOptionalStruct,
                SimpleEnum nullableList, SimpleEnum optionalList, SimpleEnum nullableOptionalList) {
            this.nullableInt = nullableInt;
            this.optionalInt = optionalInt;
            this.nullableOptionalInt = nullableOptionalInt;
            this.nullableString = nullableString;
            this.optionalString = optionalString;
            this.nullableOptionalString = nullableOptionalString;
            this.nullableStruct = nullableStruct;
            this.optionalStruct = optionalStruct;
            this.nullableOptionalStruct = nullableOptionalStruct;
            this.nullableList = nullableList;
            this.optionalList = optionalList;
            this.nullableOptionalList = nullableOptionalList;
        }
    }

    public class NestedStruct {
        public Integer a; // int8u
        public Boolean b; // boolean
        public SimpleStruct[] c; // SimpleStruct

        public NestedStruct(Integer a, Boolean b, SimpleStruct[] c) {
            this.a = a;
            this.b = b;
            this.c = c;
        }
    }

    public class NestedStructList {
        public Integer a; // int8u
        public Boolean b; // boolean
        public SimpleStruct[] c; // SimpleStruct
        public SimpleStruct[] d; // SimpleStruct
        public Integer e; // int32u
        public String f; // octet_string
        public Integer g; // int8u

        public NestedStructList(Integer a, Boolean b, SimpleStruct[] c, SimpleStruct[] d, Integer e, String f,
                Integer g) {
            this.a = a;
            this.b = b;
            this.c = c;
            this.d = d;
            this.e = e;
            this.f = f;
            this.g = g;
        }
    }

    public class DoubleNestedStructList {
        public NestedStructList a; // NestedStructList

        public DoubleNestedStructList(NestedStructList a) {
            this.a = a;
        }
    }

    public class TestListStructOctet {
        public Long member1; // int64u
        public String member2; // octet_string

        public TestListStructOctet(Long member1, String member2) {
            this.member1 = member1;
            this.member2 = member2;
        }
    }

    // ZCL Enums
    public enum SimpleEnum {
        UNSPECIFIED(0, "Unspecified"),
        VALUEA(1, "ValueA"),
        VALUEB(2, "ValueB"),
        VALUEC(3, "ValueC"),
        UNKNOWN_VALUE(4, "UnknownValue");

        public final int value;
        public final String label;

        private SimpleEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    // ZCL Bitmaps
    public static class Bitmap16MaskMap {
        public boolean maskVal1;
        public boolean maskVal2;
        public boolean maskVal3;
        public boolean maskVal4;

        public Bitmap16MaskMap(boolean maskVal1, boolean maskVal2, boolean maskVal3, boolean maskVal4) {
            this.maskVal1 = maskVal1;
            this.maskVal2 = maskVal2;
            this.maskVal3 = maskVal3;
            this.maskVal4 = maskVal4;
        }
    }

    public static class Bitmap32MaskMap {
        public boolean maskVal1;
        public boolean maskVal2;
        public boolean maskVal3;
        public boolean maskVal4;

        public Bitmap32MaskMap(boolean maskVal1, boolean maskVal2, boolean maskVal3, boolean maskVal4) {
            this.maskVal1 = maskVal1;
            this.maskVal2 = maskVal2;
            this.maskVal3 = maskVal3;
            this.maskVal4 = maskVal4;
        }
    }

    public static class Bitmap64MaskMap {
        public boolean maskVal1;
        public boolean maskVal2;
        public boolean maskVal3;
        public boolean maskVal4;

        public Bitmap64MaskMap(boolean maskVal1, boolean maskVal2, boolean maskVal3, boolean maskVal4) {
            this.maskVal1 = maskVal1;
            this.maskVal2 = maskVal2;
            this.maskVal3 = maskVal3;
            this.maskVal4 = maskVal4;
        }
    }

    public static class Bitmap8MaskMap {
        public boolean maskVal1;
        public boolean maskVal2;
        public boolean maskVal3;
        public boolean maskVal4;

        public Bitmap8MaskMap(boolean maskVal1, boolean maskVal2, boolean maskVal3, boolean maskVal4) {
            this.maskVal1 = maskVal1;
            this.maskVal2 = maskVal2;
            this.maskVal3 = maskVal3;
            this.maskVal4 = maskVal4;
        }
    }

    public static class SimpleBitmap {
        public boolean valueA;
        public boolean valueB;
        public boolean valueC;

        public SimpleBitmap(boolean valueA, boolean valueB, boolean valueC) {
            this.valueA = valueA;
            this.valueB = valueB;
            this.valueC = valueC;
        }
    }

    public static class TestCommandOptions {
        public TestCommandOptions() {
        }
    }

    public static class TestSpecificResponseCommandOptions {
        public Integer returnValue;

        public TestSpecificResponseCommandOptions(Integer returnValue) {
            this.returnValue = returnValue;
        }
    }

    public static class TestNotHandledCommandOptions {
        public TestNotHandledCommandOptions() {
        }
    }

    public static class TestAddArgumentsResponseCommandOptions {
        public Integer returnValue;

        public TestAddArgumentsResponseCommandOptions(Integer returnValue) {
            this.returnValue = returnValue;
        }
    }

    public static class TestSpecificCommandOptions {
        public TestSpecificCommandOptions() {
        }
    }

    public static class TestSimpleArgumentResponseCommandOptions {
        public Boolean returnValue;

        public TestSimpleArgumentResponseCommandOptions(Boolean returnValue) {
            this.returnValue = returnValue;
        }
    }

    public static class TestUnknownCommandCommandOptions {
        public TestUnknownCommandCommandOptions() {
        }
    }

    public static class TestStructArrayArgumentResponseCommandOptions {
        public NestedStructList arg1;
        public SimpleStruct[] arg2;
        public SimpleEnum arg3;
        public Boolean arg4;
        public SimpleEnum arg5;
        public Boolean arg6;

        public TestStructArrayArgumentResponseCommandOptions(NestedStructList arg1, SimpleStruct[] arg2,
                SimpleEnum arg3, Boolean arg4, SimpleEnum arg5, Boolean arg6) {
            this.arg1 = arg1;
            this.arg2 = arg2;
            this.arg3 = arg3;
            this.arg4 = arg4;
            this.arg5 = arg5;
            this.arg6 = arg6;
        }
    }

    public static class TestAddArgumentsCommandOptions {
        public Integer arg1;
        public Integer arg2;

        public TestAddArgumentsCommandOptions(Integer arg1, Integer arg2) {
            this.arg1 = arg1;
            this.arg2 = arg2;
        }
    }

    public static class TestListInt8UReverseResponseCommandOptions {
        public Integer arg1;

        public TestListInt8UReverseResponseCommandOptions(Integer arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestSimpleArgumentRequestCommandOptions {
        public Boolean arg1;

        public TestSimpleArgumentRequestCommandOptions(Boolean arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestEnumsResponseCommandOptions {
        public Integer arg1;
        public SimpleEnum arg2;

        public TestEnumsResponseCommandOptions(Integer arg1, SimpleEnum arg2) {
            this.arg1 = arg1;
            this.arg2 = arg2;
        }
    }

    public static class TestStructArrayArgumentRequestCommandOptions {
        public NestedStructList arg1;
        public SimpleStruct[] arg2;
        public SimpleEnum arg3;
        public Boolean arg4;
        public SimpleEnum arg5;
        public Boolean arg6;

        public TestStructArrayArgumentRequestCommandOptions(NestedStructList arg1, SimpleStruct[] arg2, SimpleEnum arg3,
                Boolean arg4, SimpleEnum arg5, Boolean arg6) {
            this.arg1 = arg1;
            this.arg2 = arg2;
            this.arg3 = arg3;
            this.arg4 = arg4;
            this.arg5 = arg5;
            this.arg6 = arg6;
        }
    }

    public static class TestNullableOptionalResponseCommandOptions {
        public Boolean wasPresent;
        public Boolean wasNull;
        public Integer value;
        public Integer originalValue;

        public TestNullableOptionalResponseCommandOptions(Boolean wasPresent, Boolean wasNull, Integer value,
                Integer originalValue) {
            this.wasPresent = wasPresent;
            this.wasNull = wasNull;
            this.value = value;
            this.originalValue = originalValue;
        }
    }

    public static class TestStructArgumentRequestCommandOptions {
        public SimpleStruct[] arg1;

        public TestStructArgumentRequestCommandOptions(SimpleStruct[] arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestComplexNullableOptionalResponseCommandOptions {
        public Boolean nullableIntWasNull;
        public Integer nullableIntValue;
        public Boolean optionalIntWasPresent;
        public Integer optionalIntValue;
        public Boolean nullableOptionalIntWasPresent;
        public Boolean nullableOptionalIntWasNull;
        public Integer nullableOptionalIntValue;
        public Boolean nullableStringWasNull;
        public String nullableStringValue;
        public Boolean optionalStringWasPresent;
        public String optionalStringValue;
        public Boolean nullableOptionalStringWasPresent;
        public Boolean nullableOptionalStringWasNull;
        public String nullableOptionalStringValue;
        public Boolean nullableStructWasNull;
        public SimpleStruct[] nullableStructValue;
        public Boolean optionalStructWasPresent;
        public SimpleStruct[] optionalStructValue;
        public Boolean nullableOptionalStructWasPresent;
        public Boolean nullableOptionalStructWasNull;
        public SimpleStruct[] nullableOptionalStructValue;
        public Boolean nullableListWasNull;
        public SimpleEnum nullableListValue;
        public Boolean optionalListWasPresent;
        public SimpleEnum optionalListValue;
        public Boolean nullableOptionalListWasPresent;
        public Boolean nullableOptionalListWasNull;
        public SimpleEnum nullableOptionalListValue;

        public TestComplexNullableOptionalResponseCommandOptions(Boolean nullableIntWasNull, Integer nullableIntValue,
                Boolean optionalIntWasPresent, Integer optionalIntValue, Boolean nullableOptionalIntWasPresent,
                Boolean nullableOptionalIntWasNull, Integer nullableOptionalIntValue, Boolean nullableStringWasNull,
                String nullableStringValue, Boolean optionalStringWasPresent, String optionalStringValue,
                Boolean nullableOptionalStringWasPresent, Boolean nullableOptionalStringWasNull,
                String nullableOptionalStringValue, Boolean nullableStructWasNull, SimpleStruct[] nullableStructValue,
                Boolean optionalStructWasPresent, SimpleStruct[] optionalStructValue,
                Boolean nullableOptionalStructWasPresent, Boolean nullableOptionalStructWasNull,
                SimpleStruct[] nullableOptionalStructValue, Boolean nullableListWasNull, SimpleEnum nullableListValue,
                Boolean optionalListWasPresent, SimpleEnum optionalListValue, Boolean nullableOptionalListWasPresent,
                Boolean nullableOptionalListWasNull, SimpleEnum nullableOptionalListValue) {
            this.nullableIntWasNull = nullableIntWasNull;
            this.nullableIntValue = nullableIntValue;
            this.optionalIntWasPresent = optionalIntWasPresent;
            this.optionalIntValue = optionalIntValue;
            this.nullableOptionalIntWasPresent = nullableOptionalIntWasPresent;
            this.nullableOptionalIntWasNull = nullableOptionalIntWasNull;
            this.nullableOptionalIntValue = nullableOptionalIntValue;
            this.nullableStringWasNull = nullableStringWasNull;
            this.nullableStringValue = nullableStringValue;
            this.optionalStringWasPresent = optionalStringWasPresent;
            this.optionalStringValue = optionalStringValue;
            this.nullableOptionalStringWasPresent = nullableOptionalStringWasPresent;
            this.nullableOptionalStringWasNull = nullableOptionalStringWasNull;
            this.nullableOptionalStringValue = nullableOptionalStringValue;
            this.nullableStructWasNull = nullableStructWasNull;
            this.nullableStructValue = nullableStructValue;
            this.optionalStructWasPresent = optionalStructWasPresent;
            this.optionalStructValue = optionalStructValue;
            this.nullableOptionalStructWasPresent = nullableOptionalStructWasPresent;
            this.nullableOptionalStructWasNull = nullableOptionalStructWasNull;
            this.nullableOptionalStructValue = nullableOptionalStructValue;
            this.nullableListWasNull = nullableListWasNull;
            this.nullableListValue = nullableListValue;
            this.optionalListWasPresent = optionalListWasPresent;
            this.optionalListValue = optionalListValue;
            this.nullableOptionalListWasPresent = nullableOptionalListWasPresent;
            this.nullableOptionalListWasNull = nullableOptionalListWasNull;
            this.nullableOptionalListValue = nullableOptionalListValue;
        }
    }

    public static class TestNestedStructArgumentRequestCommandOptions {
        public NestedStruct[] arg1;

        public TestNestedStructArgumentRequestCommandOptions(NestedStruct[] arg1) {
            this.arg1 = arg1;
        }
    }

    public static class BooleanResponseCommandOptions {
        public Boolean value;

        public BooleanResponseCommandOptions(Boolean value) {
            this.value = value;
        }
    }

    public static class TestListStructArgumentRequestCommandOptions {
        public SimpleStruct[] arg1;

        public TestListStructArgumentRequestCommandOptions(SimpleStruct[] arg1) {
            this.arg1 = arg1;
        }
    }

    public static class SimpleStructResponseCommandOptions {
        public SimpleStruct[] arg1;

        public SimpleStructResponseCommandOptions(SimpleStruct[] arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestListInt8UArgumentRequestCommandOptions {
        public Integer arg1;

        public TestListInt8UArgumentRequestCommandOptions(Integer arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestEmitTestEventResponseCommandOptions {
        public Long value;

        public TestEmitTestEventResponseCommandOptions(Long value) {
            this.value = value;
        }
    }

    public static class TestNestedStructListArgumentRequestCommandOptions {
        public NestedStructList arg1;

        public TestNestedStructListArgumentRequestCommandOptions(NestedStructList arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestEmitTestFabricScopedEventResponseCommandOptions {
        public Long value;

        public TestEmitTestFabricScopedEventResponseCommandOptions(Long value) {
            this.value = value;
        }
    }

    public static class TestListNestedStructListArgumentRequestCommandOptions {
        public NestedStructList arg1;

        public TestListNestedStructListArgumentRequestCommandOptions(NestedStructList arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestListInt8UReverseRequestCommandOptions {
        public Integer arg1;

        public TestListInt8UReverseRequestCommandOptions(Integer arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestEnumsRequestCommandOptions {
        public Integer arg1;
        public SimpleEnum arg2;

        public TestEnumsRequestCommandOptions(Integer arg1, SimpleEnum arg2) {
            this.arg1 = arg1;
            this.arg2 = arg2;
        }
    }

    public static class TestNullableOptionalRequestCommandOptions {
        public Integer arg1;

        public TestNullableOptionalRequestCommandOptions(Integer arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestComplexNullableOptionalRequestCommandOptions {
        public Integer nullableInt;
        public Integer optionalInt;
        public Integer nullableOptionalInt;
        public String nullableString;
        public String optionalString;
        public String nullableOptionalString;
        public SimpleStruct[] nullableStruct;
        public SimpleStruct[] optionalStruct;
        public SimpleStruct[] nullableOptionalStruct;
        public SimpleEnum nullableList;
        public SimpleEnum optionalList;
        public SimpleEnum nullableOptionalList;

        public TestComplexNullableOptionalRequestCommandOptions(Integer nullableInt, Integer optionalInt,
                Integer nullableOptionalInt, String nullableString, String optionalString,
                String nullableOptionalString, SimpleStruct[] nullableStruct, SimpleStruct[] optionalStruct,
                SimpleStruct[] nullableOptionalStruct, SimpleEnum nullableList, SimpleEnum optionalList,
                SimpleEnum nullableOptionalList) {
            this.nullableInt = nullableInt;
            this.optionalInt = optionalInt;
            this.nullableOptionalInt = nullableOptionalInt;
            this.nullableString = nullableString;
            this.optionalString = optionalString;
            this.nullableOptionalString = nullableOptionalString;
            this.nullableStruct = nullableStruct;
            this.optionalStruct = optionalStruct;
            this.nullableOptionalStruct = nullableOptionalStruct;
            this.nullableList = nullableList;
            this.optionalList = optionalList;
            this.nullableOptionalList = nullableOptionalList;
        }
    }

    public static class SimpleStructEchoRequestCommandOptions {
        public SimpleStruct[] arg1;

        public SimpleStructEchoRequestCommandOptions(SimpleStruct[] arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TimedInvokeRequestCommandOptions {
        public TimedInvokeRequestCommandOptions() {
        }
    }

    public static class TestSimpleOptionalArgumentRequestCommandOptions {
        public Boolean arg1;

        public TestSimpleOptionalArgumentRequestCommandOptions(Boolean arg1) {
            this.arg1 = arg1;
        }
    }

    public static class TestEmitTestEventRequestCommandOptions {
        public Integer arg1;
        public SimpleEnum arg2;
        public Boolean arg3;

        public TestEmitTestEventRequestCommandOptions(Integer arg1, SimpleEnum arg2, Boolean arg3) {
            this.arg1 = arg1;
            this.arg2 = arg2;
            this.arg3 = arg3;
        }
    }

    public static class TestEmitTestFabricScopedEventRequestCommandOptions {
        public Integer arg1;

        public TestEmitTestFabricScopedEventRequestCommandOptions(Integer arg1) {
            this.arg1 = arg1;
        }
    }
}
