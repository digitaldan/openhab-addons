/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import org.openhab.binding.matter.internal.client.model.cluster.ClusterCommand;
import org.openhab.binding.matter.internal.client.model.cluster.gen.ActionsClusterTypes.*;

/**
 * Actions
 *
 * @author Dan Cunningham - Initial contribution
 */
public class ActionsClusterCommands {

    public static ClusterCommand instantAction(Integer actionID, Integer invokeID) {
        return new ClusterCommand("instantAction", new InstantActionCommandOptions(actionID, invokeID));
    }

    public static ClusterCommand instantActionWithTransition(Integer actionID, Integer invokeID,
            Integer transitionTime) {
        return new ClusterCommand("instantActionWithTransition",
                new InstantActionWithTransitionCommandOptions(actionID, invokeID, transitionTime));
    }

    public static ClusterCommand startAction(Integer actionID, Integer invokeID) {
        return new ClusterCommand("startAction", new StartActionCommandOptions(actionID, invokeID));
    }

    public static ClusterCommand startActionWithDuration(Integer actionID, Integer invokeID, Integer duration) {
        return new ClusterCommand("startActionWithDuration",
                new StartActionWithDurationCommandOptions(actionID, invokeID, duration));
    }

    public static ClusterCommand stopAction(Integer actionID, Integer invokeID) {
        return new ClusterCommand("stopAction", new StopActionCommandOptions(actionID, invokeID));
    }

    public static ClusterCommand pauseAction(Integer actionID, Integer invokeID) {
        return new ClusterCommand("pauseAction", new PauseActionCommandOptions(actionID, invokeID));
    }

    public static ClusterCommand pauseActionWithDuration(Integer actionID, Integer invokeID, Integer duration) {
        return new ClusterCommand("pauseActionWithDuration",
                new PauseActionWithDurationCommandOptions(actionID, invokeID, duration));
    }

    public static ClusterCommand resumeAction(Integer actionID, Integer invokeID) {
        return new ClusterCommand("resumeAction", new ResumeActionCommandOptions(actionID, invokeID));
    }

    public static ClusterCommand enableAction(Integer actionID, Integer invokeID) {
        return new ClusterCommand("enableAction", new EnableActionCommandOptions(actionID, invokeID));
    }

    public static ClusterCommand enableActionWithDuration(Integer actionID, Integer invokeID, Integer duration) {
        return new ClusterCommand("enableActionWithDuration",
                new EnableActionWithDurationCommandOptions(actionID, invokeID, duration));
    }

    public static ClusterCommand disableAction(Integer actionID, Integer invokeID) {
        return new ClusterCommand("disableAction", new DisableActionCommandOptions(actionID, invokeID));
    }

    public static ClusterCommand disableActionWithDuration(Integer actionID, Integer invokeID, Integer duration) {
        return new ClusterCommand("disableActionWithDuration",
                new DisableActionWithDurationCommandOptions(actionID, invokeID, duration));
    }
}
