/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import java.util.List;
import java.util.Map;

/**
 * BinaryInputBasic
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class BinaryInputBasicCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "BINARY_INPUT_BASIC_CLUSTER";
    public static final int CLUSTER_ID = 0x000F;

    public String activeText; // 4 char_string reportable writable
    public String description; // 28 char_string reportable writable
    public String inactiveText; // 46 char_string reportable writable
    public Boolean outOfService; // 81 boolean reportable writable
    public Integer polarity; // 84 enum8 reportable
    public Boolean presentValue; // 85 boolean reportable writable
    public Integer reliability; // 103 enum8 reportable writable
    public Map<String, Boolean> statusFlags; // 111 bitmap8 reportable
    public Integer applicationType; // 256 int32u reportable
    public List<Integer> generatedCommandList; // 65528 command_id reportable
    public List<Integer> acceptedCommandList; // 65529 command_id reportable
    public List<Integer> eventList; // 65530 event_id reportable
    public List<Integer> attributeList; // 65531 attrib_id reportable
    public Map<String, Boolean> featureMap; // 65532 bitmap32 reportable
    public Integer clusterRevision; // 65533 int16u reportable

    public BinaryInputBasicCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 36, "BinaryInputBasic");
    }

    public String toString() {
        String str = "";
        str += "activeText : " + activeText + "\n";
        str += "description : " + description + "\n";
        str += "inactiveText : " + inactiveText + "\n";
        str += "outOfService : " + outOfService + "\n";
        str += "polarity : " + polarity + "\n";
        str += "presentValue : " + presentValue + "\n";
        str += "reliability : " + reliability + "\n";
        str += "statusFlags : " + statusFlags + "\n";
        str += "applicationType : " + applicationType + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
