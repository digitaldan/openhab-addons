/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.ClusterCommand;
import org.openhab.binding.matter.internal.client.model.cluster.gen.GroupsClusterTypes.*;

/**
 * Groups
 *
 * @author Dan Cunningham - Initial contribution
 */
public class GroupsClusterCommands {

    public static ClusterCommand addGroup(List<Integer> groupID, String groupName) {
        return new ClusterCommand("addGroup", new AddGroupCommandOptions(groupID, groupName));
    }

    public static ClusterCommand addGroupResponse(Integer status, List<Integer> groupID) {
        return new ClusterCommand("addGroupResponse", new AddGroupResponseCommandOptions(status, groupID));
    }

    public static ClusterCommand viewGroup(List<Integer> groupID) {
        return new ClusterCommand("viewGroup", new ViewGroupCommandOptions(groupID));
    }

    public static ClusterCommand viewGroupResponse(Integer status, List<Integer> groupID, String groupName) {
        return new ClusterCommand("viewGroupResponse", new ViewGroupResponseCommandOptions(status, groupID, groupName));
    }

    public static ClusterCommand getGroupMembership(List<Integer> groupList) {
        return new ClusterCommand("getGroupMembership", new GetGroupMembershipCommandOptions(groupList));
    }

    public static ClusterCommand getGroupMembershipResponse(Integer capacity, List<Integer> groupList) {
        return new ClusterCommand("getGroupMembershipResponse",
                new GetGroupMembershipResponseCommandOptions(capacity, groupList));
    }

    public static ClusterCommand removeGroup(List<Integer> groupID) {
        return new ClusterCommand("removeGroup", new RemoveGroupCommandOptions(groupID));
    }

    public static ClusterCommand removeGroupResponse(Integer status, List<Integer> groupID) {
        return new ClusterCommand("removeGroupResponse", new RemoveGroupResponseCommandOptions(status, groupID));
    }

    public static ClusterCommand removeAllGroups() {
        return new ClusterCommand("removeAllGroups", new RemoveAllGroupsCommandOptions());
    }

    public static ClusterCommand addGroupIfIdentifying(List<Integer> groupID, String groupName) {
        return new ClusterCommand("addGroupIfIdentifying", new AddGroupIfIdentifyingCommandOptions(groupID, groupName));
    }
}
