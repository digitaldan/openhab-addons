/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */
// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import java.util.List;
import java.util.Map;

/**
 * BallastConfiguration
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class BallastConfigurationCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "BALLAST_CONFIGURATION_CLUSTER";
    public static final int CLUSTER_ID = 0x0301;

    // ZCL Bitmaps
    public static class BallastStatusBitmap {
        public boolean ballastNonOperational;
        public boolean lampFailure;

        public BallastStatusBitmap(boolean ballastNonOperational, boolean lampFailure) {
            this.ballastNonOperational = ballastNonOperational;
            this.lampFailure = lampFailure;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static BallastStatusBitmap fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new BallastStatusBitmap(keys[0], keys[1]);
        }
    }

    public static class LampAlarmModeBitmap {
        public boolean lampBurnHours;

        public LampAlarmModeBitmap(boolean lampBurnHours) {
            this.lampBurnHours = lampBurnHours;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static LampAlarmModeBitmap fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new LampAlarmModeBitmap(keys[0]);
        }
    }

    public Integer physicalMinLevel; // 0 int8u reportable
    public Integer physicalMaxLevel; // 1 int8u reportable
    public BallastStatusBitmap ballastStatus; // 2 BallastStatusBitmap reportable
    public Integer minLevel; // 16 int8u reportable writable
    public Integer maxLevel; // 17 int8u reportable writable
    public Integer intrinsicBallastFactor; // 20 int8u reportable writable
    public Integer ballastFactorAdjustment; // 21 int8u reportable writable
    public Integer lampQuantity; // 32 int8u reportable
    public String lampType; // 48 char_string reportable writable
    public String lampManufacturer; // 49 char_string reportable writable
    public Integer lampRatedHours; // 50 int24u reportable writable
    public Integer lampBurnHours; // 51 int24u reportable writable
    public LampAlarmModeBitmap lampAlarmMode; // 52 LampAlarmModeBitmap reportable writable
    public Integer lampBurnHoursTripPoint; // 53 int24u reportable writable
    public List<Integer> generatedCommandList; // 65528 command_id reportable
    public List<Integer> acceptedCommandList; // 65529 command_id reportable
    public List<Integer> eventList; // 65530 event_id reportable
    public List<Integer> attributeList; // 65531 attrib_id reportable
    public Map<String, Boolean> featureMap; // 65532 bitmap32 reportable
    public Integer clusterRevision; // 65533 int16u reportable

    public BallastConfigurationCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 6, "BallastConfiguration");
    }

    public String toString() {
        String str = "";
        str += "physicalMinLevel : " + physicalMinLevel + "\n";
        str += "physicalMaxLevel : " + physicalMaxLevel + "\n";
        str += "ballastStatus : " + ballastStatus + "\n";
        str += "minLevel : " + minLevel + "\n";
        str += "maxLevel : " + maxLevel + "\n";
        str += "intrinsicBallastFactor : " + intrinsicBallastFactor + "\n";
        str += "ballastFactorAdjustment : " + ballastFactorAdjustment + "\n";
        str += "lampQuantity : " + lampQuantity + "\n";
        str += "lampType : " + lampType + "\n";
        str += "lampManufacturer : " + lampManufacturer + "\n";
        str += "lampRatedHours : " + lampRatedHours + "\n";
        str += "lampBurnHours : " + lampBurnHours + "\n";
        str += "lampAlarmMode : " + lampAlarmMode + "\n";
        str += "lampBurnHoursTripPoint : " + lampBurnHoursTripPoint + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
