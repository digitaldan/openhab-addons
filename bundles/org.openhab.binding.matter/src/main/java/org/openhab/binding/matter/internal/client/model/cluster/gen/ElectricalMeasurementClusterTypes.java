/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.Map;
import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;
import static java.util.Map.entry;  

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * ElectricalMeasurement
 *
 * @author Dan Cunningham - Initial contribution
 */
public class ElectricalMeasurementClusterTypes {

    public static final String CLUSTER_NAME = "ELECTRICAL_MEASUREMENT_CLUSTER";
    public static final int CLUSTER_ID = 0x0B04;


    public static class GetProfileInfoResponseCommandCommandOptions {
        public Integer profileCount;
        public Integer profileIntervalPeriod;
        public Integer maxNumberOfIntervals;
        public Integer listOfAttributes;
        public  GetProfileInfoResponseCommandCommandOptions(Integer profileCount, Integer profileIntervalPeriod, Integer maxNumberOfIntervals, Integer listOfAttributes){
            this.profileCount = profileCount;
            this.profileIntervalPeriod = profileIntervalPeriod;
            this.maxNumberOfIntervals = maxNumberOfIntervals;
            this.listOfAttributes = listOfAttributes;
        }
    }
    public static class GetProfileInfoCommandCommandOptions {
        public  GetProfileInfoCommandCommandOptions(){
        }
    }
    public static class GetMeasurementProfileResponseCommandCommandOptions {
        public Integer startTime;
        public Integer status;
        public Integer profileIntervalPeriod;
        public Integer numberOfIntervalsDelivered;
        public Integer attributeId;
        public Integer intervals;
        public  GetMeasurementProfileResponseCommandCommandOptions(Integer startTime, Integer status, Integer profileIntervalPeriod, Integer numberOfIntervalsDelivered, Integer attributeId, Integer intervals){
            this.startTime = startTime;
            this.status = status;
            this.profileIntervalPeriod = profileIntervalPeriod;
            this.numberOfIntervalsDelivered = numberOfIntervalsDelivered;
            this.attributeId = attributeId;
            this.intervals = intervals;
        }
    }
    public static class GetMeasurementProfileCommandCommandOptions {
        public Integer attributeId;
        public Integer startTime;
        public Integer numberOfIntervals;
        public  GetMeasurementProfileCommandCommandOptions(Integer attributeId, Integer startTime, Integer numberOfIntervals){
            this.attributeId = attributeId;
            this.startTime = startTime;
            this.numberOfIntervals = numberOfIntervals;
        }
    }
}
