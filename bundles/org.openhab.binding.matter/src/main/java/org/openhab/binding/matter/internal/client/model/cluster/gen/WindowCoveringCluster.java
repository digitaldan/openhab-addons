/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.model.cluster.BaseCluster;
import org.openhab.binding.matter.internal.client.model.cluster.gen.WindowCoveringClusterTypes.*;

/**
 * WindowCovering
 *
 * @author Dan Cunningham - Initial contribution
 */
public class WindowCoveringCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "WindowCovering";
    public static final int CLUSTER_ID = 0x0102;

    public Type type; // 0 Type reportable
    public Integer physicalClosedLimitLift; // 1 int16u reportable
    public Integer physicalClosedLimitTilt; // 2 int16u reportable
    public Integer currentPositionLift; // 3 int16u reportable
    public Integer currentPositionTilt; // 4 int16u reportable
    public Integer numberOfActuationsLift; // 5 int16u reportable
    public Integer numberOfActuationsTilt; // 6 int16u reportable
    public ConfigStatus configStatus; // 7 ConfigStatus reportable
    public Integer currentPositionLiftPercentage; // 8 percent reportable
    public Integer currentPositionTiltPercentage; // 9 percent reportable
    public OperationalStatus operationalStatus; // 10 OperationalStatus reportable
    public Integer targetPositionLiftPercent100ths; // 11 percent100ths reportable
    public Integer targetPositionTiltPercent100ths; // 12 percent100ths reportable
    public EndProductType endProductType; // 13 EndProductType reportable
    public Integer currentPositionLiftPercent100ths; // 14 percent100ths reportable
    public Integer currentPositionTiltPercent100ths; // 15 percent100ths reportable
    public Integer installedOpenLimitLift; // 16 int16u reportable
    public Integer installedClosedLimitLift; // 17 int16u reportable
    public Integer installedOpenLimitTilt; // 18 int16u reportable
    public Integer installedClosedLimitTilt; // 19 int16u reportable
    public Mode mode; // 23 Mode reportable writable
    public SafetyStatus safetyStatus; // 26 SafetyStatus reportable
    public List<Integer> generatedCommandList; // 65528 command_id reportable
    public List<Integer> acceptedCommandList; // 65529 command_id reportable
    public List<Integer> eventList; // 65530 event_id reportable
    public List<Integer> attributeList; // 65531 attrib_id reportable
    public Map<String, Boolean> featureMap; // 65532 bitmap32 reportable
    public Integer clusterRevision; // 65533 int16u reportable

    public WindowCoveringCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 87, "WindowCovering");
    }

    public String toString() {
        String str = "";
        str += "type : " + type + "\n";
        str += "physicalClosedLimitLift : " + physicalClosedLimitLift + "\n";
        str += "physicalClosedLimitTilt : " + physicalClosedLimitTilt + "\n";
        str += "currentPositionLift : " + currentPositionLift + "\n";
        str += "currentPositionTilt : " + currentPositionTilt + "\n";
        str += "numberOfActuationsLift : " + numberOfActuationsLift + "\n";
        str += "numberOfActuationsTilt : " + numberOfActuationsTilt + "\n";
        str += "configStatus : " + configStatus + "\n";
        str += "currentPositionLiftPercentage : " + currentPositionLiftPercentage + "\n";
        str += "currentPositionTiltPercentage : " + currentPositionTiltPercentage + "\n";
        str += "operationalStatus : " + operationalStatus + "\n";
        str += "targetPositionLiftPercent100ths : " + targetPositionLiftPercent100ths + "\n";
        str += "targetPositionTiltPercent100ths : " + targetPositionTiltPercent100ths + "\n";
        str += "endProductType : " + endProductType + "\n";
        str += "currentPositionLiftPercent100ths : " + currentPositionLiftPercent100ths + "\n";
        str += "currentPositionTiltPercent100ths : " + currentPositionTiltPercent100ths + "\n";
        str += "installedOpenLimitLift : " + installedOpenLimitLift + "\n";
        str += "installedClosedLimitLift : " + installedClosedLimitLift + "\n";
        str += "installedOpenLimitTilt : " + installedOpenLimitTilt + "\n";
        str += "installedClosedLimitTilt : " + installedClosedLimitTilt + "\n";
        str += "mode : " + mode + "\n";
        str += "safetyStatus : " + safetyStatus + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
