/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.Map;
import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;
import static java.util.Map.entry;  

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * TimeSynchronization
 *
 * @author Dan Cunningham - Initial contribution
 */
public class TimeSynchronizationClusterTypes {

    public static final String CLUSTER_NAME = "TIME_SYNCHRONIZATION_CLUSTER";
    public static final int CLUSTER_ID = 0x0038;

     public class DSTOffsetStruct {
        public Integer offset; // int32s
        public Long validStarting; // epoch_us
        public Long validUntil; // epoch_us
        public DSTOffsetStruct(Integer offset, Long validStarting, Long validUntil) {
            this.offset = offset;
            this.validStarting = validStarting;
            this.validUntil = validUntil;
        }
     }
     public class FabricScopedTrustedTimeSourceStruct {
        public Long nodeID; // node_id
        public List<Integer> endpoint; // endpoint_no
        public FabricScopedTrustedTimeSourceStruct(Long nodeID, List<Integer> endpoint) {
            this.nodeID = nodeID;
            this.endpoint = endpoint;
        }
     }
     public class TimeZoneStruct {
        public Integer offset; // int32s
        public Long validAt; // epoch_us
        public String name; // char_string
        public TimeZoneStruct(Integer offset, Long validAt, String name) {
            this.offset = offset;
            this.validAt = validAt;
            this.name = name;
        }
     }
     public class TrustedTimeSourceStruct {
        public Integer fabricIndex; // fabric_idx
        public Long nodeID; // node_id
        public List<Integer> endpoint; // endpoint_no
        public TrustedTimeSourceStruct(Integer fabricIndex, Long nodeID, List<Integer> endpoint) {
            this.fabricIndex = fabricIndex;
            this.nodeID = nodeID;
            this.endpoint = endpoint;
        }
     }
    //ZCL Enums
    public enum GranularityEnum {
        NOTIMEGRANULARITY(0, "NoTimeGranularity"),
        MINUTESGRANULARITY(1, "MinutesGranularity"),
        SECONDSGRANULARITY(2, "SecondsGranularity"),
        MILLISECONDSGRANULARITY(3, "MillisecondsGranularity"),
        MICROSECONDSGRANULARITY(4, "MicrosecondsGranularity"),
        UNKNOWN_VALUE(5,"UnknownValue");

        public final int value;
        public final String label;
        private GranularityEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum StatusCode {
        TIMENOTACCEPTED(2, "TimeNotAccepted"),
        UNKNOWN_VALUE(0,"UnknownValue");

        public final int value;
        public final String label;
        private StatusCode(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum TimeSourceEnum {
        NONE(0, "None"),
        UNKNOWN(1, "Unknown"),
        ADMIN(2, "Admin"),
        NODETIMECLUSTER(3, "NodeTimeCluster"),
        NONMATTERSNTP(4, "NonMatterSNTP"),
        NONMATTERNTP(5, "NonMatterNTP"),
        MATTERSNTP(6, "MatterSNTP"),
        MATTERNTP(7, "MatterNTP"),
        MIXEDNTP(8, "MixedNTP"),
        NONMATTERSNTPNTS(9, "NonMatterSNTPNTS"),
        NONMATTERNTPNTS(10, "NonMatterNTPNTS"),
        MATTERSNTPNTS(11, "MatterSNTPNTS"),
        MATTERNTPNTS(12, "MatterNTPNTS"),
        MIXEDNTPNTS(13, "MixedNTPNTS"),
        CLOUDSOURCE(14, "CloudSource"),
        PTP(15, "PTP"),
        GNSS(16, "GNSS"),
        UNKNOWN_VALUE(17,"UnknownValue");

        public final int value;
        public final String label;
        private TimeSourceEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum TimeZoneDatabaseEnum {
        FULL(0, "Full"),
        PARTIAL(1, "Partial"),
        NONE(2, "None"),
        UNKNOWN_VALUE(3,"UnknownValue");

        public final int value;
        public final String label;
        private TimeZoneDatabaseEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    //ZCL Bitmaps
    public static class Feature {
        public boolean timeZone;
        public boolean NTPClient;
        public boolean NTPServer;
        public boolean timeSyncClient;
        public Feature(boolean timeZone, boolean NTPClient, boolean NTPServer, boolean timeSyncClient){
            this.timeZone = timeZone;
            this.NTPClient = NTPClient;
            this.NTPServer = NTPServer;
            this.timeSyncClient = timeSyncClient;
        }
    }

    public static class SetUTCTimeCommandOptions {
        public Long UTCTime;
        public GranularityEnum granularity;
        public TimeSourceEnum timeSource;
        public  SetUTCTimeCommandOptions(Long UTCTime, GranularityEnum granularity, TimeSourceEnum timeSource){
            this.UTCTime = UTCTime;
            this.granularity = granularity;
            this.timeSource = timeSource;
        }
    }
    public static class SetTrustedTimeSourceCommandOptions {
        public FabricScopedTrustedTimeSourceStruct[] trustedTimeSource;
        public  SetTrustedTimeSourceCommandOptions(FabricScopedTrustedTimeSourceStruct[] trustedTimeSource){
            this.trustedTimeSource = trustedTimeSource;
        }
    }
    public static class SetTimeZoneCommandOptions {
        public TimeZoneStruct[] timeZone;
        public  SetTimeZoneCommandOptions(TimeZoneStruct[] timeZone){
            this.timeZone = timeZone;
        }
    }
    public static class SetTimeZoneResponseCommandOptions {
        public Boolean DSTOffsetRequired;
        public  SetTimeZoneResponseCommandOptions(Boolean DSTOffsetRequired){
            this.DSTOffsetRequired = DSTOffsetRequired;
        }
    }
    public static class SetDSTOffsetCommandOptions {
        public DSTOffsetStruct[] DSTOffset;
        public  SetDSTOffsetCommandOptions(DSTOffsetStruct[] DSTOffset){
            this.DSTOffset = DSTOffset;
        }
    }
    public static class SetDefaultNTPCommandOptions {
        public String defaultNTP;
        public  SetDefaultNTPCommandOptions(String defaultNTP){
            this.defaultNTP = defaultNTP;
        }
    }
}
