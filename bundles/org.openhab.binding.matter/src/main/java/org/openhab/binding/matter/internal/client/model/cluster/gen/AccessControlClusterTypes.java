/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.Map;
import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;
import static java.util.Map.entry;  

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * AccessControl
 *
 * @author Dan Cunningham - Initial contribution
 */
public class AccessControlClusterTypes {

    public static final String CLUSTER_NAME = "ACCESS_CONTROL_CLUSTER";
    public static final int CLUSTER_ID = 0x001F;

     public class AccessControlTargetStruct {
        public List<Integer> cluster; // cluster_id
        public List<Integer> endpoint; // endpoint_no
        public Integer deviceType; // devtype_id
        public AccessControlTargetStruct(List<Integer> cluster, List<Integer> endpoint, Integer deviceType) {
            this.cluster = cluster;
            this.endpoint = endpoint;
            this.deviceType = deviceType;
        }
     }
     public class AccessControlEntryStruct {
        public AccessControlEntryPrivilegeEnum privilege; // AccessControlEntryPrivilegeEnum
        public AccessControlEntryAuthModeEnum authMode; // AccessControlEntryAuthModeEnum
        public Long subjects; // int64u
        public AccessControlTargetStruct[] targets; // AccessControlTargetStruct
        public Integer fabricIndex; // fabric_idx
        public AccessControlEntryStruct(AccessControlEntryPrivilegeEnum privilege, AccessControlEntryAuthModeEnum authMode, Long subjects, AccessControlTargetStruct[] targets, Integer fabricIndex) {
            this.privilege = privilege;
            this.authMode = authMode;
            this.subjects = subjects;
            this.targets = targets;
            this.fabricIndex = fabricIndex;
        }
     }
     public class AccessControlExtensionStruct {
        public String data; // octet_string
        public Integer fabricIndex; // fabric_idx
        public AccessControlExtensionStruct(String data, Integer fabricIndex) {
            this.data = data;
            this.fabricIndex = fabricIndex;
        }
     }
    //ZCL Enums
    public enum AccessControlEntryAuthModeEnum {
        PASE(1, "PASE"),
        CASE(2, "CASE"),
        GROUP(3, "Group"),
        UNKNOWN_VALUE(0,"UnknownValue");

        public final int value;
        public final String label;
        private AccessControlEntryAuthModeEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum AccessControlEntryPrivilegeEnum {
        VIEW(1, "View"),
        PROXY_VIEW(2, "Proxy View"),
        OPERATE(3, "Operate"),
        MANAGE(4, "Manage"),
        ADMINISTER(5, "Administer"),
        UNKNOWN_VALUE(0,"UnknownValue");

        public final int value;
        public final String label;
        private AccessControlEntryPrivilegeEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };

    public enum ChangeTypeEnum {
        CHANGED(0, "Changed"),
        ADDED(1, "Added"),
        REMOVED(2, "Removed"),
        UNKNOWN_VALUE(3,"UnknownValue");

        public final int value;
        public final String label;
        private ChangeTypeEnum(int value, String label){
            this.value = value;
            this.label = label;
        }
    };


}
