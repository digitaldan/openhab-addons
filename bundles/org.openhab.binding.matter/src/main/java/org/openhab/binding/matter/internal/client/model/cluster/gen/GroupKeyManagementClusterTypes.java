/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// 

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.List;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * AUTO-GENERATED by zap. DO NOT EDIT!
 *
 * GroupKeyManagement
 *
 * @author Dan Cunningham - Initial contribution
 */
public class GroupKeyManagementClusterTypes {

    public static final String CLUSTER_NAME = "GROUP_KEY_MANAGEMENT_CLUSTER";
    public static final int CLUSTER_ID = 0x003F;

    public class GroupInfoMapStruct {
        public List<Integer> groupId; // group_id
        public List<Integer> endpoints; // endpoint_no
        public String groupName; // char_string
        public Integer fabricIndex; // fabric_idx

        public GroupInfoMapStruct(List<Integer> groupId, List<Integer> endpoints, String groupName,
                Integer fabricIndex) {
            this.groupId = groupId;
            this.endpoints = endpoints;
            this.groupName = groupName;
            this.fabricIndex = fabricIndex;
        }
    }

    public class GroupKeyMapStruct {
        public List<Integer> groupId; // group_id
        public Integer groupKeySetID; // int16u
        public Integer fabricIndex; // fabric_idx

        public GroupKeyMapStruct(List<Integer> groupId, Integer groupKeySetID, Integer fabricIndex) {
            this.groupId = groupId;
            this.groupKeySetID = groupKeySetID;
            this.fabricIndex = fabricIndex;
        }
    }

    public class GroupKeySetStruct {
        public Integer groupKeySetID; // int16u
        public GroupKeySecurityPolicyEnum groupKeySecurityPolicy; // GroupKeySecurityPolicyEnum
        public String epochKey0; // octet_string
        public Long epochStartTime0; // epoch_us
        public String epochKey1; // octet_string
        public Long epochStartTime1; // epoch_us
        public String epochKey2; // octet_string
        public Long epochStartTime2; // epoch_us

        public GroupKeySetStruct(Integer groupKeySetID, GroupKeySecurityPolicyEnum groupKeySecurityPolicy,
                String epochKey0, Long epochStartTime0, String epochKey1, Long epochStartTime1, String epochKey2,
                Long epochStartTime2) {
            this.groupKeySetID = groupKeySetID;
            this.groupKeySecurityPolicy = groupKeySecurityPolicy;
            this.epochKey0 = epochKey0;
            this.epochStartTime0 = epochStartTime0;
            this.epochKey1 = epochKey1;
            this.epochStartTime1 = epochStartTime1;
            this.epochKey2 = epochKey2;
            this.epochStartTime2 = epochStartTime2;
        }
    }

    // ZCL Enums
    public enum GroupKeySecurityPolicyEnum {
        TRUSTFIRST(0, "TrustFirst"),
        CACHEANDSYNC(1, "CacheAndSync"),
        UNKNOWN_VALUE(2, "UnknownValue");

        public final int value;
        public final String label;

        private GroupKeySecurityPolicyEnum(int value, String label) {
            this.value = value;
            this.label = label;
        }
    };

    // ZCL Bitmaps
    public static class Feature {
        public boolean cacheAndSync;

        public Feature(boolean cacheAndSync) {
            this.cacheAndSync = cacheAndSync;
        }
    }

    public static class KeySetWriteCommandOptions {
        public GroupKeySetStruct[] groupKeySet;

        public KeySetWriteCommandOptions(GroupKeySetStruct[] groupKeySet) {
            this.groupKeySet = groupKeySet;
        }
    }

    public static class KeySetReadCommandOptions {
        public Integer groupKeySetID;

        public KeySetReadCommandOptions(Integer groupKeySetID) {
            this.groupKeySetID = groupKeySetID;
        }
    }

    public static class KeySetReadResponseCommandOptions {
        public GroupKeySetStruct[] groupKeySet;

        public KeySetReadResponseCommandOptions(GroupKeySetStruct[] groupKeySet) {
            this.groupKeySet = groupKeySet;
        }
    }

    public static class KeySetRemoveCommandOptions {
        public Integer groupKeySetID;

        public KeySetRemoveCommandOptions(Integer groupKeySetID) {
            this.groupKeySetID = groupKeySetID;
        }
    }

    public static class KeySetReadAllIndicesCommandOptions {
        public KeySetReadAllIndicesCommandOptions() {
        }
    }

    public static class KeySetReadAllIndicesResponseCommandOptions {
        public Integer groupKeySetIDs;

        public KeySetReadAllIndicesResponseCommandOptions(Integer groupKeySetIDs) {
            this.groupKeySetIDs = groupKeySetIDs;
        }
    }
}
