/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import static java.util.Map.entry;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * Descriptor
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class DescriptorCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "DESCRIPTOR_CLUSTER";
    public static final int CLUSTER_ID = 0x001D;

    static {
        ATTRIBUTE_MAPPING = Map.ofEntries(entry(65, "deviceTypeList"), entry(146, "serverList"),
                entry(215, "clientList"), entry(279, "partsList"), entry(328, "tagList"),
                entry(13, "generatedCommandList"), entry(11, "acceptedCommandList"), entry(9, "eventList"),
                entry(7, "attributeList"), entry(5, "featureMap"), entry(2, "clusterRevision"));
        COMMAND_MAPPING = Map.ofEntries();
    }

    class DeviceTypeStruct implements JsonSerializable {
        public Integer deviceType; // devtype_id
        public Integer revision; // int16u

        public DeviceTypeStruct(Integer deviceType, Integer revision) {
            this.deviceType = deviceType;
            this.revision = revision;
        }

        public String toJson() {
            String out = "{";
            out += "\"deviceType\" : " + deviceType + ",";
            out += "\"revision\" : " + revision + "";
            out += "}";
            return out;
        }
    }

    class SemanticTagStruct implements JsonSerializable {
        public Integer mfgCode; // vendor_id
        public Integer namespaceID; // enum8
        public Integer tag; // enum8
        public String label; // char_string

        public SemanticTagStruct(Integer mfgCode, Integer namespaceID, Integer tag, String label) {
            this.mfgCode = mfgCode;
            this.namespaceID = namespaceID;
            this.tag = tag;
            this.label = label;
        }

        public String toJson() {
            String out = "{";
            out += "\"mfgCode\" : " + mfgCode + ",";
            out += "\"namespaceID\" : " + namespaceID + ",";
            out += "\"tag\" : " + tag + ",";
            out += "\"label\" : " + label + "";
            out += "}";
            return out;
        }
    }

    // ZCL Bitmaps
    public static class Feature implements JsonSerializable {
        public boolean tagList;

        public Feature(boolean tagList) {
            this.tagList = tagList;
        }

        public String toJson() {
            String out = "{";
            out += "\"tagList\" : " + tagList + "";
            out += "}";
            return out;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static Feature fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new Feature(keys[0]);
        }
    }

    public DeviceTypeStruct[] deviceTypeList; // 65 DeviceTypeStruct
    public List<Integer> serverList; // 146 cluster_id
    public List<Integer> clientList; // 215 cluster_id
    public List<Integer> partsList; // 279 endpoint_no
    public SemanticTagStruct[] tagList; // 328 SemanticTagStruct
    public List<Integer> generatedCommandList; // 13 command_id
    public List<Integer> acceptedCommandList; // 11 command_id
    public List<Integer> eventList; // 9 event_id
    public List<Integer> attributeList; // 7 attrib_id
    public Map<String, Boolean> featureMap; // 5 bitmap32
    public Integer clusterRevision; // 2 int16u

    public DescriptorCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 61, "Descriptor");
    }

    public String toString() {
        String str = "";
        str += "deviceTypeList : " + deviceTypeList + "\n";
        str += "serverList : " + serverList + "\n";
        str += "clientList : " + clientList + "\n";
        str += "partsList : " + partsList + "\n";
        str += "tagList : " + tagList + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
