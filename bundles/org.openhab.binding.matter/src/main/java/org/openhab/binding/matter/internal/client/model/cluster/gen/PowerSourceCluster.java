/**
 * Copyright (c) 2010-2024 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster.gen;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.model.cluster.BaseCluster;
import org.openhab.binding.matter.internal.client.model.cluster.gen.PowerSourceClusterTypes.*;

/**
 * PowerSource
 *
 * @author Dan Cunningham - Initial contribution
 */
public class PowerSourceCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "PowerSource";
    public static final int CLUSTER_ID = 0x002F;

    public PowerSourceStatusEnum status; // 0 PowerSourceStatusEnum reportable
    public Integer order; // 1 int8u reportable
    public String description; // 2 char_string reportable
    public Integer wiredAssessedInputVoltage; // 3 int32u reportable
    public Integer wiredAssessedInputFrequency; // 4 int16u reportable
    public WiredCurrentTypeEnum wiredCurrentType; // 5 WiredCurrentTypeEnum reportable
    public Integer wiredAssessedCurrent; // 6 int32u reportable
    public Integer wiredNominalVoltage; // 7 int32u reportable
    public Integer wiredMaximumCurrent; // 8 int32u reportable
    public Boolean wiredPresent; // 9 boolean reportable
    public WiredFaultEnum activeWiredFaults; // 10 WiredFaultEnum reportable
    public Integer batVoltage; // 11 int32u reportable
    public Integer batPercentRemaining; // 12 int8u reportable
    public Integer batTimeRemaining; // 13 int32u reportable
    public BatChargeLevelEnum batChargeLevel; // 14 BatChargeLevelEnum reportable
    public Boolean batReplacementNeeded; // 15 boolean reportable
    public BatReplaceabilityEnum batReplaceability; // 16 BatReplaceabilityEnum reportable
    public Boolean batPresent; // 17 boolean reportable
    public BatFaultEnum activeBatFaults; // 18 BatFaultEnum reportable
    public String batReplacementDescription; // 19 char_string reportable
    public BatCommonDesignationEnum batCommonDesignation; // 20 BatCommonDesignationEnum reportable
    public String batANSIDesignation; // 21 char_string reportable
    public String batIECDesignation; // 22 char_string reportable
    public BatApprovedChemistryEnum batApprovedChemistry; // 23 BatApprovedChemistryEnum reportable
    public Integer batCapacity; // 24 int32u reportable
    public Integer batQuantity; // 25 int8u reportable
    public BatChargeStateEnum batChargeState; // 26 BatChargeStateEnum reportable
    public Integer batTimeToFullCharge; // 27 int32u reportable
    public Boolean batFunctionalWhileCharging; // 28 boolean reportable
    public Integer batChargingCurrent; // 29 int32u reportable
    public BatChargeFaultEnum activeBatChargeFaults; // 30 BatChargeFaultEnum reportable
    public List<Integer> endpointList; // 31 endpoint_no reportable
    public List<Integer> generatedCommandList; // 65528 command_id reportable
    public List<Integer> acceptedCommandList; // 65529 command_id reportable
    public List<Integer> eventList; // 65530 event_id reportable
    public List<Integer> attributeList; // 65531 attrib_id reportable
    public Map<String, Boolean> featureMap; // 65532 bitmap32 reportable
    public Integer clusterRevision; // 65533 int16u reportable

    public PowerSourceCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 61, "PowerSource");
    }

    public String toString() {
        String str = "";
        str += "status : " + status + "\n";
        str += "order : " + order + "\n";
        str += "description : " + description + "\n";
        str += "wiredAssessedInputVoltage : " + wiredAssessedInputVoltage + "\n";
        str += "wiredAssessedInputFrequency : " + wiredAssessedInputFrequency + "\n";
        str += "wiredCurrentType : " + wiredCurrentType + "\n";
        str += "wiredAssessedCurrent : " + wiredAssessedCurrent + "\n";
        str += "wiredNominalVoltage : " + wiredNominalVoltage + "\n";
        str += "wiredMaximumCurrent : " + wiredMaximumCurrent + "\n";
        str += "wiredPresent : " + wiredPresent + "\n";
        str += "activeWiredFaults : " + activeWiredFaults + "\n";
        str += "batVoltage : " + batVoltage + "\n";
        str += "batPercentRemaining : " + batPercentRemaining + "\n";
        str += "batTimeRemaining : " + batTimeRemaining + "\n";
        str += "batChargeLevel : " + batChargeLevel + "\n";
        str += "batReplacementNeeded : " + batReplacementNeeded + "\n";
        str += "batReplaceability : " + batReplaceability + "\n";
        str += "batPresent : " + batPresent + "\n";
        str += "activeBatFaults : " + activeBatFaults + "\n";
        str += "batReplacementDescription : " + batReplacementDescription + "\n";
        str += "batCommonDesignation : " + batCommonDesignation + "\n";
        str += "batANSIDesignation : " + batANSIDesignation + "\n";
        str += "batIECDesignation : " + batIECDesignation + "\n";
        str += "batApprovedChemistry : " + batApprovedChemistry + "\n";
        str += "batCapacity : " + batCapacity + "\n";
        str += "batQuantity : " + batQuantity + "\n";
        str += "batChargeState : " + batChargeState + "\n";
        str += "batTimeToFullCharge : " + batTimeToFullCharge + "\n";
        str += "batFunctionalWhileCharging : " + batFunctionalWhileCharging + "\n";
        str += "batChargingCurrent : " + batChargingCurrent + "\n";
        str += "activeBatChargeFaults : " + activeBatChargeFaults + "\n";
        str += "endpointList : " + endpointList + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
