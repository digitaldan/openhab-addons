/**
 * Copyright (c) 2010-2023 Contributors to the openHAB project
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 */

// AUTO-GENERATED by zap. DO NOT EDIT!

package org.openhab.binding.matter.internal.client.model.cluster;

import static java.util.Map.entry;

import java.util.List;
import java.util.Map;

import org.openhab.binding.matter.internal.client.model.cluster.types.*;

/**
 * Switch
 * 
 * @author Dan Cunningham - Initial contribution
 */
public class SwitchCluster extends BaseCluster {

    public static final String CLUSTER_NAME = "SWITCH_CLUSTER";
    public static final int CLUSTER_ID = 0x003B;

    static {
        ATTRIBUTE_MAPPING = Map.ofEntries(entry(75, "numberOfPositions"), entry(153, "currentPosition"),
                entry(222, "multiPressMax"), entry(13, "generatedCommandList"), entry(11, "acceptedCommandList"),
                entry(9, "eventList"), entry(7, "attributeList"), entry(5, "featureMap"), entry(2, "clusterRevision"));
        COMMAND_MAPPING = Map.ofEntries();
    }

    // ZCL Bitmaps
    public static class Feature implements JsonSerializable {
        public boolean latchingSwitch;
        public boolean momentarySwitch;
        public boolean momentarySwitchRelease;
        public boolean momentarySwitchLongPress;
        public boolean momentarySwitchMultiPress;

        public Feature(boolean latchingSwitch, boolean momentarySwitch, boolean momentarySwitchRelease,
                boolean momentarySwitchLongPress, boolean momentarySwitchMultiPress) {
            this.latchingSwitch = latchingSwitch;
            this.momentarySwitch = momentarySwitch;
            this.momentarySwitchRelease = momentarySwitchRelease;
            this.momentarySwitchLongPress = momentarySwitchLongPress;
            this.momentarySwitchMultiPress = momentarySwitchMultiPress;
        }

        public String toJson() {
            String out = "{";
            out += "\"latchingSwitch\" : " + latchingSwitch + ",";
            out += "\"momentarySwitch\" : " + momentarySwitch + ",";
            out += "\"momentarySwitchRelease\" : " + momentarySwitchRelease + ",";
            out += "\"momentarySwitchLongPress\" : " + momentarySwitchLongPress + ",";
            out += "\"momentarySwitchMultiPress\" : " + momentarySwitchMultiPress + "";
            out += "}";
            return out;
        }

        @SuppressWarnings({ "unchecked", "null" })
        public static Feature fromJson(String json) {
            Map<String, Boolean> m = GSON.fromJson(json, Map.class);
            Boolean[] keys = m.values().toArray(new Boolean[0]);
            return new Feature(keys[0], keys[1], keys[2], keys[3], keys[4]);
        }
    }

    public Integer numberOfPositions; // 75 int8u
    public Integer currentPosition; // 153 int8u
    public Integer multiPressMax; // 222 int8u
    public List<Integer> generatedCommandList; // 13 command_id
    public List<Integer> acceptedCommandList; // 11 command_id
    public List<Integer> eventList; // 9 event_id
    public List<Integer> attributeList; // 7 attrib_id
    public Map<String, Boolean> featureMap; // 5 bitmap32
    public Integer clusterRevision; // 2 int16u

    public SwitchCluster(long nodeId, int endpointId) {
        super(nodeId, endpointId, 71, "Switch");
    }

    public String toString() {
        String str = "";
        str += "numberOfPositions : " + numberOfPositions + "\n";
        str += "currentPosition : " + currentPosition + "\n";
        str += "multiPressMax : " + multiPressMax + "\n";
        str += "generatedCommandList : " + generatedCommandList + "\n";
        str += "acceptedCommandList : " + acceptedCommandList + "\n";
        str += "eventList : " + eventList + "\n";
        str += "attributeList : " + attributeList + "\n";
        str += "featureMap : " + featureMap + "\n";
        str += "clusterRevision : " + clusterRevision + "\n";
        return str;
    }
}
